INSERT INTO BD_MINAM.SEG_USUARIO_ROL (ID_USUARIO_ROL, ID_USUARIO, ID_ROL, ESTADO) VALUES(<ID_USUARIO_ROL>, <id_rrangel>, <id_ROL_ADMIN_CERO_PAPEL>, 'A');

CREATE OR REPLACE PACKAGE BODY BD_TRAMITE_CERO_PAPEL.PKG_TRAMITE_CERO_PAPEL IS

	

     PROCEDURE USP_CP_ACTUALIZAR_DOCUMENTO(
		    P_ID_DOCUMENTO IN CP_TBL_DOCUMENTO.ID_DOCUMENTO%TYPE DEFAULT NULL,
		    P_COD_ETIPO_DOCUMENTO IN CP_TBL_DOCUMENTO.COD_ETIPO_DOCUMENTO%TYPE DEFAULT NULL,
		    P_ID_SESION_MOD  IN CP_TBL_DOCUMENTO.ID_SESION_MOD%TYPE,
		    P_RESULTADO_OUT OUT VARCHAR2 ) IS
		   
		    BEGIN
		   	 UPDATE CP_TBL_DOCUMENTO SET 
		   	 COD_ETIPO_DOCUMENTO =  P_COD_ETIPO_DOCUMENTO,
		   	 ID_SESION_MOD= P_ID_SESION_MOD,
		   	 FECHA_MOD= SYSDATE 
		     WHERE ID_DOCUMENTO = P_ID_DOCUMENTO;
			 P_RESULTADO_OUT := '1';	
			
	  END ;
	 

		 
		PROCEDURE USP_CP_ACTUALIZAR_REGISTRO(
		    P_ID_REGISTRO IN CP_TBL_REGISTRO.ID_REGISTRO%TYPE DEFAULT NULL,
		    P_TXT_DESCRIPCION_TRAMITE IN CP_TBL_REGISTRO.TXT_DESCRIPCION_TRAMITE%TYPE DEFAULT NULL,
		    P_FLG_DECLARACION_JURADA IN CP_TBL_REGISTRO.FLG_DECLARACION_JURADA%TYPE DEFAULT NULL,
		    P_ID_SESION_MOD  IN CP_TBL_REGISTRO.ID_SESION_MOD%TYPE,
		    P_RESULTADO_OUT OUT VARCHAR2 ) IS    
		   
			BEGIN
			   	 UPDATE CP_TBL_REGISTRO SET 
			   	 TXT_DESCRIPCION_TRAMITE =  P_TXT_DESCRIPCION_TRAMITE,			   	 
			   	 FLG_DECLARACION_JURADA = P_FLG_DECLARACION_JURADA,
			   	 ID_SESION_MOD= P_ID_SESION_MOD,
			   	 FECHA_MOD= SYSDATE 
			     WHERE ID_REGISTRO = P_ID_REGISTRO;
				-- COMMIT;
				 P_RESULTADO_OUT := '1';
				
		END ;
	 
		PROCEDURE USP_CP_ACTUALIZAR_REGISTRO_EXP(
		    P_ID_REGISTRO IN CP_TBL_REGISTRO.ID_REGISTRO%TYPE DEFAULT NULL,
		    P_ID_EXPEDIENTE IN CP_TBL_REGISTRO.ID_EXPEDIENTE%TYPE DEFAULT NULL,
		    P_COD_EESTA_TRAMI IN CP_TBL_REGISTRO.COD_EESTA_TRAMI%TYPE DEFAULT NULL,
		    P_ID_SESION_MOD  IN CP_TBL_REGISTRO.ID_SESION_MOD%TYPE,
		    P_RESULTADO_OUT OUT VARCHAR2 ) IS
		   
		  BEGIN
		   	 UPDATE CP_TBL_REGISTRO SET 
		   	 ID_EXPEDIENTE =  P_ID_EXPEDIENTE,
		   	 COD_EESTA_TRAMI = P_COD_EESTA_TRAMI,
		   	 FEC_ENVIO_TRAMITE = SYSDATE,
		   	 ID_SESION_MOD= P_ID_SESION_MOD,
		   	 FECHA_MOD= SYSDATE 
		     WHERE ID_REGISTRO = P_ID_REGISTRO;
			 --   COMMIT;
			 P_RESULTADO_OUT := '1';	
			
		
		  END ;
		 
		 
		  PROCEDURE USP_CP_ASIGNAR_REPRESENTANTE(
		    P_ID_JURIDICA IN CP_TBL_CIUDADANO.ID_JURIDICA%TYPE DEFAULT NULL,
		    P_ID_NATURAL IN CP_TBL_CIUDADANO.ID_NATURAL%TYPE DEFAULT NULL,
		    P_ID_SESION_MOD  IN CP_TBL_CIUDADANO.ID_SESION_MOD%TYPE,
		    P_RESULTADO_OUT OUT VARCHAR2 ) IS    
		    
		    V_REPRES_LEGAL_JOURNAL NUMBER;
		    
		  BEGIN
			    V_REPRES_LEGAL_JOURNAL:= CP_TBL_REPRESLEGAL_JOURNAL_SEQ.NEXTVAL;
			  
		   	 UPDATE BD_TRAMITE_CERO_PAPEL.CP_TBL_PERSO_JURIDICA SET 
		   	 ID_REPRESENTANTE_LEGAL =  P_ID_NATURAL,   	 
		   	 ID_SESION_MOD= P_ID_SESION_MOD,
		   	 FECHA_MOD= SYSDATE 
		     WHERE ID_JURIDICA = P_ID_JURIDICA;
		    
		     INSERT INTO CP_TBL_REPRES_LEGAL_JOURNAL
		      (
		       ID_REPRES_LEGAL_JOURNAL
		      ,ID_JURIDICA
		      ,ID_NATURAL
		      ,FEC_INICIO_REP
		      ,ESTADO 
			  ,ID_SESION_REG
			  ,ID_SESION_MOD
			  
		      )VALUES(
		      V_REPRES_LEGAL_JOURNAL
		      ,P_ID_JURIDICA
		      ,P_ID_NATURAL
		      ,SYSDATE
		      ,'1'
     	      ,P_ID_SESION_MOD   
     	      ,P_ID_SESION_MOD     	      
		      );
			 --COMMIT;
			 P_RESULTADO_OUT := '1';
			
			
		     /* EXCEPTION
		            WHEN OTHERS THEN
		              P_RESULTADO_OUT:= NULL;*/
		  END ;

		  PROCEDURE USP_CP_ELIMINAR_ARCHIVO(
		    P_ID_ARCHIVO IN CP_TBL_ARCHIVO.ID_DOCUMENTO%TYPE DEFAULT NULL,
		    P_ID_SESION_MOD  IN CP_TBL_ARCHIVO.ID_SESION_MOD%TYPE,
		    P_RESULTADO_OUT OUT VARCHAR2 ) IS
		   
		  BEGIN
			  
			 UPDATE CP_TBL_ARCHIVO SET FLG_ESTADO = '0',
			 	    ID_SESION_MOD= P_ID_SESION_MOD,
		   	        FECHA_MOD= SYSDATE 
			 WHERE ID_ARCHIVO = P_ID_ARCHIVO;   	 
			 --COMMIT;
			 P_RESULTADO_OUT := 'Se Realizo correctamente actualizacion del registro';
		     /*EXCEPTION
		        WHEN OTHERS THEN
		        P_RESULTADO_OUT:= NULL;*/
		  END ;
		 
		 PROCEDURE USP_CP_GET_PERSONAL (
			 P_ID_CLIENTE IN NUMBER,
			 p_ResultSet  OUT  SYS_REFCURSOR) 
			IS
			
			BEGIN
			  OPEN p_ResultSet FOR
			  
			  SELECT 
			  		ID_PERSONAL
			  		,NOMBRES
			        ,APELLIDOS       
			        ,DNI
			        ,CARGO        
			  FROM
			  BD_ECODOC_PLUS.PERSONAL
			  WHERE
			  ID_CLIENTE=P_ID_CLIENTE ;		      
           END USP_CP_GET_PERSONAL;
          
          
          PROCEDURE USP_CP_GETUBIGEO (
			 P_PADRE IN NUMBER DEFAULT NULL,
			 p_ResultSet  OUT  SYS_REFCURSOR) 
			IS
			
			BEGIN
				   IF P_PADRE IS NULL THEN   
				     OPEN p_ResultSet FOR
				  		SELECT 
				  	      ID_UBIGEO,
				  	      UPPER(NOMBRE) NOMBRE
				  	      FROM BD_ECODOC_PLUS.UBIGEO 
				  	      WHERE PADRE  IS NULL;
					ELSE
					  OPEN p_ResultSet FOR
				    	SELECT 
				  	     ID_UBIGEO,
				  	      UPPER(NOMBRE) NOMBRE
				  	    FROM BD_ECODOC_PLUS.UBIGEO 
				  	    WHERE PADRE  = P_PADRE;
				    END IF;
			      
			END USP_CP_GETUBIGEO;
          
		
			PROCEDURE USP_CP_INSERT_ARCHIVO(
					P_COD_TSUST_DOCUMENTO IN CP_TBL_ARCHIVO.COD_TSUST_DOCUMENTO%TYPE DEFAULT NULL,
					P_COD_ESUST_DOCUMENTO IN CP_TBL_ARCHIVO.COD_ESUST_DOCUMENTO%TYPE DEFAULT NULL,	
					P_TXT_NUMERO_ARCHIVO IN CP_TBL_ARCHIVO.TXT_NUMERO_ARCHIVO%TYPE DEFAULT NULL,
					P_FLG_ESPRINCIPAL IN CP_TBL_ARCHIVO.FLG_ESPRINCIPAL%TYPE DEFAULT NULL,	
					P_FLG_ESTA_FIRMADO IN CP_TBL_ARCHIVO.FLG_ESTA_FIRMADO%TYPE DEFAULT NULL,
					P_TXT_NOMBRE_ARCHIVO IN CP_TBL_ARCHIVO.TXT_NOMBRE_ARCHIVO%TYPE DEFAULT NULL,
					P_TXT_RUTA_LOCAL IN CP_TBL_ARCHIVO.TXT_RUTA_LOCAL%TYPE DEFAULT NULL,
					P_ID_DOCUMENTO IN CP_TBL_ARCHIVO.ID_DOCUMENTO%TYPE DEFAULT NULL,					
					P_ID_SESION_REG  IN CP_TBL_ARCHIVO.ID_SESION_REG%TYPE,
					P_ID_SESION_MOD  IN CP_TBL_ARCHIVO.ID_SESION_MOD%TYPE,
					P_ID_ARCHIVO_OUT OUT CP_TBL_ARCHIVO.ID_ARCHIVO%TYPE,
					P_RESULTADO OUT VARCHAR2 
						 
				) IS   
				   V_ID_ARCHIVO NUMBER;
				  
					
				  BEGIN
					     V_ID_ARCHIVO:= CP_TBL_ARCHIVO_SEQ.NEXTVAL;
				     INSERT INTO CP_TBL_ARCHIVO
				        (
				         ID_ARCHIVO
				       	,COD_TSUST_DOCUMENTO
					    ,COD_ESUST_DOCUMENTO	
						,TXT_NUMERO_ARCHIVO
						,FLG_ESPRINCIPAL
						,FLG_ESTA_FIRMADO
						,TXT_NOMBRE_ARCHIVO
						,TXT_RUTA_LOCAL
						,ID_DOCUMENTO
						,FLG_ESTADO					
						,ID_SESION_REG
						,ID_SESION_MOD
				        )
				        VALUES(
				         V_ID_ARCHIVO
						,P_COD_TSUST_DOCUMENTO
					    ,P_COD_ESUST_DOCUMENTO	
						,P_TXT_NUMERO_ARCHIVO
						,P_FLG_ESPRINCIPAL
						,P_FLG_ESTA_FIRMADO
						,P_TXT_NOMBRE_ARCHIVO
						,P_TXT_RUTA_LOCAL
						,P_ID_DOCUMENTO
						,'1'						
						,P_ID_SESION_REG
						,P_ID_SESION_MOD
				        );
				       P_ID_ARCHIVO_OUT:= V_ID_ARCHIVO;
							 P_RESULTADO := '1';
				     -- COMMIT;
				       /*EXCEPTION
				            WHEN OTHERS THEN
				             P_ID_ARCHIVO_OUT:= NULL ;
										 P_RESULTADO := 'FATAL ERROR';*/
				  END ;
          
          
				 
			 PROCEDURE USP_CP_INSERT_ARCHIVO_ECODOC(     
					 P_ESTADO IN BD_ECODOC_PLUS.ARCHIVO.ESTADO%TYPE DEFAULT NULL,
					 P_NOMBRE IN BD_ECODOC_PLUS.ARCHIVO.NOMBRE%TYPE DEFAULT NULL,	 
					 P_RUTA_LOCAL IN BD_ECODOC_PLUS.ARCHIVO.RUTA_LOCAL%TYPE DEFAULT NULL,
					 P_DOCUMENTO IN BD_ECODOC_PLUS.ARCHIVO.DOCUMENTO%TYPE DEFAULT NULL,
					 P_ES_PRINCIPAL IN BD_ECODOC_PLUS.ARCHIVO.ES_PRINCIPAL%TYPE DEFAULT NULL,
					 P_ID_ARCHIVO_OUT OUT BD_ECODOC_PLUS.ARCHIVO.ID_ARCHIVO%TYPE,
					 P_RESULTADO OUT VARCHAR2 
						 
				) IS
				   
				   V_ID_ARCHIVO NUMBER;
					
				  BEGIN
					     V_ID_ARCHIVO:= BD_ECODOC_PLUS.ARCHIVO_SEQ.NEXTVAL;
				     INSERT INTO BD_ECODOC_PLUS.ARCHIVO
				        (
				         ID_ARCHIVO
				       	 ,ESTADO
					 	 ,NOMBRE	 
					  	 ,RUTA_LOCAL
					     ,DOCUMENTO
					 	 ,ES_PRINCIPAL
					 	 ,FECHA_CREACION
				        )
				        VALUES(
				         V_ID_ARCHIVO		 
				       	 ,P_ESTADO
					 	 ,P_NOMBRE	 
					  	 ,P_RUTA_LOCAL
					     ,P_DOCUMENTO
					 	 ,P_ES_PRINCIPAL
					 	 ,CURRENT_TIMESTAMP
				        );
				       P_ID_ARCHIVO_OUT:= V_ID_ARCHIVO;
							 P_RESULTADO := '1';
      			     /* COMMIT;
				       EXCEPTION
				            WHEN OTHERS THEN
				             P_ID_ARCHIVO_OUT:= NULL ;
										 P_RESULTADO := '0';*/
				  END ;

 
			 PROCEDURE USP_CP_INSERT_CIUDADANO(   
				P_ID_USUARIO IN CP_TBL_CIUDADANO.ID_USUARIO%TYPE DEFAULT NULL,    
			    P_ID_NATURAL IN CP_TBL_CIUDADANO.ID_NATURAL%TYPE DEFAULT NULL,
			    P_ID_JURIDICA IN CP_TBL_CIUDADANO.ID_JURIDICA%TYPE DEFAULT NULL,
			    P_TXT_DIRECCION IN CP_TBL_CIUDADANO.TXT_DIRECCION%TYPE DEFAULT NULL,
			    P_NUM_TELEFONO_CELULAR IN CP_TBL_CIUDADANO.NUM_TELEFONO_CELULAR%TYPE DEFAULT NULL,
			    P_TXT_CORREO_ELECTRONICO IN CP_TBL_CIUDADANO.TXT_CORREO_ELECTRONICO%TYPE DEFAULT NULL,
			    P_ID_UBIGEO_DOMICILIO  IN CP_TBL_CIUDADANO.ID_UBIGEO_DOMICILIO%TYPE DEFAULT NULL,    
			    P_ID_SESION_REG  IN CP_TBL_CIUDADANO.ID_SESION_REG%TYPE,
				P_ID_SESION_MOD  IN CP_TBL_CIUDADANO.ID_SESION_MOD%TYPE,
			    P_ID_CIUDADANO_OUT OUT CP_TBL_CIUDADANO.ID_CIUDADANO%TYPE,
				P_FLG_RESULTADO OUT VARCHAR2 
					 
			) IS   
			   V_ID_CIUDADANO NUMBER;
				
			  BEGIN
				     V_ID_CIUDADANO:= CP_TBL_CIUDADANO_SEQ.NEXTVAL;
			     INSERT INTO CP_TBL_CIUDADANO
			        (
					         ID_CIUDADANO
					        ,ID_USUARIO 
					        ,ID_NATURAL
					        ,ID_JURIDICA
							,TXT_DIRECCION
							,NUM_TELEFONO_CELULAR
							,TXT_CORREO_ELECTRONICO
							,ID_UBIGEO_DOMICILIO
							,ID_SESION_REG
							,ID_SESION_MOD
			        )
			        VALUES(
			        		 V_ID_CIUDADANO
					        ,P_ID_USUARIO 
					        ,P_ID_NATURAL
					        ,P_ID_JURIDICA
							,P_TXT_DIRECCION
							,P_NUM_TELEFONO_CELULAR
							,P_TXT_CORREO_ELECTRONICO
							,P_ID_UBIGEO_DOMICILIO
							,P_ID_SESION_REG
							,P_ID_SESION_MOD
			        );
			       P_ID_CIUDADANO_OUT:= V_ID_CIUDADANO;
				   P_FLG_RESULTADO := '1';
			      --COMMIT;
			      /* EXCEPTION
			            WHEN OTHERS THEN
			             P_ID_CIUDADANO_OUT:= NULL ;
									 P_FLG_RESULTADO := '0';*/
			  END ;

 
 
			PROCEDURE USP_CP_INSERT_CLIENTE(
			
			    P_ESTADO IN BD_ECODOC_PLUS.CLIENTE.ESTADO%TYPE DEFAULT NULL,
			    P_NUMERO_IDENTIFICACION IN BD_ECODOC_PLUS.CLIENTE.NUMERO_IDENTIFICACION%TYPE DEFAULT NULL,
				P_RAZON_SOCIAL IN BD_ECODOC_PLUS.CLIENTE.RAZON_SOCIAL%TYPE DEFAULT NULL,		
			    P_APELLIDO_PATERNO IN BD_ECODOC_PLUS.CLIENTE.APELLIDO_PATERNO%TYPE DEFAULT NULL,
			    P_APELLIDO_MATERNO IN BD_ECODOC_PLUS.CLIENTE.APELLIDO_MATERNO%TYPE DEFAULT NULL,
			    P_NOMBRE IN BD_ECODOC_PLUS.CLIENTE.NOMBRE%TYPE DEFAULT NULL,
			    P_TELEFONO IN BD_ECODOC_PLUS.CLIENTE.TELEFONO%TYPE DEFAULT NULL,
			    P_ID_TIPO_CLIENTE IN BD_ECODOC_PLUS.CLIENTE.ID_TIPO_CLIENTE%TYPE DEFAULT NULL,
			    P_ID_TIPO_MEDIO_ENVIO IN BD_ECODOC_PLUS.CLIENTE.ID_TIPO_MEDIO_ENVIO%TYPE DEFAULT NULL, 
			    P_ID_CLIENTE_OUT OUT BD_ECODOC_PLUS.CLIENTE.ID_CLIENTE%TYPE,
				P_RESULTADO OUT VARCHAR2 
					 
			) IS			   
			   V_ID_CLIENTE NUMBER;				
			  BEGIN
				     V_ID_CLIENTE:= BD_ECODOC_PLUS.CLIENTE_SEQ.NEXTVAL;
			     INSERT INTO BD_ECODOC_PLUS.CLIENTE
			        (
			         ID_CLIENTE
			        ,ESTADO
			        ,NUMERO_IDENTIFICACION
					,RAZON_SOCIAL
					,APELLIDO_PATERNO
					,APELLIDO_MATERNO
					,NOMBRE
					,TELEFONO
					,ID_TIPO_CLIENTE
					,ID_TIPO_MEDIO_ENVIO
					,FECHA_CREACION
			        )
			        VALUES(
			        V_ID_CLIENTE
			        ,P_ESTADO
			        ,P_NUMERO_IDENTIFICACION
			        ,P_RAZON_SOCIAL
			        ,P_APELLIDO_PATERNO
					,P_APELLIDO_MATERNO
					,P_NOMBRE
					,P_TELEFONO
					,P_ID_TIPO_CLIENTE
					,P_ID_TIPO_MEDIO_ENVIO
					,SYSDATE
			        );
			       P_ID_CLIENTE_OUT:= V_ID_CLIENTE;
						 P_RESULTADO := 'SE REGISTRO CON EXITO';
			    /*  COMMIT;
			       EXCEPTION
			            WHEN OTHERS THEN
			             P_ID_CLIENTE_OUT:= NULL ;
									 P_RESULTADO := 'FATAL ERROR';*/
			  END ;

 
 
			PROCEDURE USP_CP_INSERT_DIRECCION(			
			    P_DIRECCION IN BD_ECODOC_PLUS.DIRECCION.DIRECCION%TYPE DEFAULT NULL,
			    P_ID_CLIENTE IN BD_ECODOC_PLUS.DIRECCION.ID_CLIENTE%TYPE DEFAULT NULL,
				P_UBIGEO IN BD_ECODOC_PLUS.DIRECCION.UBIGEO%TYPE DEFAULT NULL,
			    P_ID_DIRECCION_OUT OUT BD_ECODOC_PLUS.DIRECCION.ID_DIRECCION%TYPE,
				P_RESULTADO OUT VARCHAR2 
					 
			) IS
			   
			   V_ID_DIRECCION NUMBER;
				
			  BEGIN
				     V_ID_DIRECCION:= BD_ECODOC_PLUS.DIRECCION_SEQ.NEXTVAL;
			     INSERT INTO BD_ECODOC_PLUS.DIRECCION
			        (
			         ID_DIRECCION
			        ,DIRECCION
			        ,ID_CLIENTE
					,UBIGEO				
			        )
			        VALUES(
			        V_ID_DIRECCION
			        ,P_DIRECCION
			        ,P_ID_CLIENTE
			        ,P_UBIGEO        				
			        );
			       P_ID_DIRECCION_OUT:= V_ID_DIRECCION;
						 P_RESULTADO := 'SE REGISTRO CON EXITO';
			     /* COMMIT;
			       EXCEPTION
			            WHEN OTHERS THEN
			             P_ID_DIRECCION_OUT:= NULL ;
									 P_RESULTADO := 'FATAL ERROR';*/
			  END ;

 
			PROCEDURE	USP_CP_INSERT_DOCUMENTO(
				P_COD_TTIPO_DOCUMENTO IN CP_TBL_DOCUMENTO.COD_TTIPO_DOCUMENTO%TYPE DEFAULT NULL,
				P_COD_ETIPO_DOCUMENTO IN CP_TBL_DOCUMENTO.COD_ETIPO_DOCUMENTO%TYPE DEFAULT NULL,	
				P_FLG_ESTADO IN CP_TBL_DOCUMENTO.FLG_ESTADO%TYPE DEFAULT NULL,
				P_ID_REGISTRO IN CP_TBL_DOCUMENTO.ID_REGISTRO%TYPE DEFAULT NULL,
				P_ID_SESION_REG  IN CP_TBL_DOCUMENTO.ID_SESION_REG%TYPE,
				P_ID_SESION_MOD  IN CP_TBL_DOCUMENTO.ID_SESION_MOD%TYPE,
				P_ID_DOCUMENTO_OUT OUT CP_TBL_DOCUMENTO.ID_DOCUMENTO%TYPE,	
				P_RESULTADO OUT VARCHAR2
			) IS
			   
			   V_ID_DOCUMENTO NUMBER;
				
			  BEGIN
				     V_ID_DOCUMENTO:= CP_TBL_DOCUMENTO_SEQ.NEXTVAL;
			     INSERT INTO CP_TBL_DOCUMENTO
			        (
			        ID_DOCUMENTO
			        	,COD_TTIPO_DOCUMENTO
						,COD_ETIPO_DOCUMENTO		
						,FLG_ESTADO
						,ID_REGISTRO						
						,ID_SESION_REG
						,ID_SESION_MOD
			        )
			        VALUES(
			         V_ID_DOCUMENTO
					 ,P_COD_TTIPO_DOCUMENTO
			         ,P_COD_ETIPO_DOCUMENTO		 
					 ,P_FLG_ESTADO		
					 ,P_ID_REGISTRO				
					 ,P_ID_SESION_REG
					 ,P_ID_SESION_MOD
					 
			        );
			       P_ID_DOCUMENTO_OUT:= V_ID_DOCUMENTO;
						 P_RESULTADO := '1';
			      /*COMMIT;
			       EXCEPTION
			            WHEN OTHERS THEN
			             P_ID_DOCUMENTO_OUT:= NULL ;
									 P_RESULTADO := '0';*/
			  END ;

 
 
			PROCEDURE USP_CP_INSERT_DOCUMENTO_ECODOC(
				    P_ESTADO IN BD_ECODOC_PLUS.DOCUMENTO.ESTADO%TYPE DEFAULT NULL,
				    P_FOLIOS IN BD_ECODOC_PLUS.DOCUMENTO.FOLIOS%TYPE DEFAULT NULL,
				    P_NUMERO IN BD_ECODOC_PLUS.DOCUMENTO.NUMERO%TYPE DEFAULT NULL,
				    P_TITULO IN BD_ECODOC_PLUS.DOCUMENTO.TITULO%TYPE DEFAULT NULL,
				    P_AUTOR IN BD_ECODOC_PLUS.DOCUMENTO.AUTOR%TYPE DEFAULT NULL,
				    P_EXPEDIENTE IN BD_ECODOC_PLUS.DOCUMENTO.EXPEDIENTE%TYPE DEFAULT NULL,
				    P_ID_TIPO_DOCUMENTO IN VARCHAR2 DEFAULT NULL,
				    P_ID_AREA_AUTOR IN BD_ECODOC_PLUS.DOCUMENTO.ID_AREA_AUTOR%TYPE DEFAULT NULL,
				    P_PRESENTA_CD IN BD_ECODOC_PLUS.DOCUMENTO.PRESENTA_CD%TYPE DEFAULT NULL,
				    P_FOLIADO IN BD_ECODOC_PLUS.DOCUMENTO.FOLIADO%TYPE,
				    P_ES_PRINCIPAL IN BD_ECODOC_PLUS.DOCUMENTO.ES_PRINCIPAL%TYPE,
				    P_ESTADO_DIGITALIZACION IN BD_ECODOC_PLUS.DOCUMENTO.ESTADO_DIGITALIZACION%TYPE,
				    P_CD IN BD_ECODOC_PLUS.DOCUMENTO.CD%TYPE,
				    P_ID_DOCUMENTO_OUT OUT BD_ECODOC_PLUS.DOCUMENTO.ID_DOCUMENTO%TYPE,
					P_RESULTADO OUT VARCHAR2 
						 
				) IS
				   V_ID_TIPO_DOCUMENTO NUMBER(10,0);
				   V_ID_DOCUMENTO NUMBER;
					
				  BEGIN
					     V_ID_DOCUMENTO:= BD_ECODOC_PLUS.DOCUMENTO_SEQ.NEXTVAL;
							 
							 SELECT FN_REF_ECODOC(P_ID_TIPO_DOCUMENTO)  INTO V_ID_TIPO_DOCUMENTO FROM DUAL;
				     INSERT INTO BD_ECODOC_PLUS.DOCUMENTO
				        (
				         ID_DOCUMENTO        
				        ,ESTADO
						,FECHA_CREACION
						,FOLIOS
						,NUMERO
						,TITULO
						,AUTOR 
					    ,EXPEDIENTE 
					    ,ID_TIPO_DOCUMENTO 
					    ,ID_AREA_AUTOR 
					    ,PRESENTA_CD 
					    ,FOLIADO
					    ,ES_PRINCIPAL 
					    ,ESTADO_DIGITALIZACION
				        )
				        VALUES(
				         V_ID_DOCUMENTO        
				        ,P_ESTADO
						,CURRENT_TIMESTAMP
						,P_FOLIOS
						,P_NUMERO
						,P_TITULO
						,P_AUTOR 
					    ,P_EXPEDIENTE 
					    ,V_ID_TIPO_DOCUMENTO 
					    ,P_ID_AREA_AUTOR 
					    ,P_PRESENTA_CD 
					    ,P_FOLIADO
					    ,P_ES_PRINCIPAL 
					    ,P_ESTADO_DIGITALIZACION
				        );
				       P_ID_DOCUMENTO_OUT:= V_ID_DOCUMENTO;
							 P_RESULTADO := '1';
				     /* COMMIT;
				       EXCEPTION
				            WHEN OTHERS THEN
				             P_ID_DOCUMENTO_OUT:= NULL ;
										 P_RESULTADO := '0';*/
				  END ;

 
			 PROCEDURE USP_CP_INSERT_EXPEDIENTE(					
					    P_COPIADO IN BD_ECODOC_PLUS.EXPEDIENTE.COPIADO%TYPE DEFAULT NULL,
					    P_ESTADO IN BD_ECODOC_PLUS.EXPEDIENTE.ESTADO%TYPE DEFAULT NULL,
					    P_TITULO IN BD_ECODOC_PLUS.EXPEDIENTE.TITULO%TYPE DEFAULT NULL,
					    P_ID_CLIENTE IN BD_ECODOC_PLUS.EXPEDIENTE.ID_CLIENTE%TYPE DEFAULT NULL,
					    P_ID_PERSONA IN BD_ECODOC_PLUS.EXPEDIENTE.ID_PERSONA%TYPE DEFAULT NULL,
					    P_ID_PROCESO IN BD_ECODOC_PLUS.EXPEDIENTE.ID_PROCESO%TYPE DEFAULT NULL,					    
					    P_ID_PERSONA_ACTUALIZA IN BD_ECODOC_PLUS.EXPEDIENTE.ID_PERSONA_ACTUALIZA%TYPE DEFAULT NULL,
					    P_PLAZO IN BD_ECODOC_PLUS.EXPEDIENTE.PLAZO%TYPE DEFAULT NULL,
					    P_ID_ESTACION_ACTUAL IN BD_ECODOC_PLUS.EXPEDIENTE.ID_ESTACION_ACTUAL%TYPE DEFAULT NULL,
					    
					    P_ID_ESTACION_PREVIA IN BD_ECODOC_PLUS.EXPEDIENTE.ID_ESTACION_PREVIA%TYPE DEFAULT NULL,
					    P_ID_PLAZO_TIPO_DIAS IN BD_ECODOC_PLUS.EXPEDIENTE.ID_PLAZO_TIPO_DIAS%TYPE DEFAULT NULL,
					    P_ID_SEDE IN BD_ECODOC_PLUS.EXPEDIENTE.ID_SEDE%TYPE DEFAULT NULL,
					    
					    P_REFERENCIA IN BD_ECODOC_PLUS.EXPEDIENTE.REFERENCIA%TYPE DEFAULT NULL,
					    P_CLAVE_EXTERNO IN BD_ECODOC_PLUS.EXPEDIENTE.CLAVE_EXTERNO%TYPE DEFAULT NULL,
					    P_ID_TIPO_ORIGEN IN BD_ECODOC_PLUS.EXPEDIENTE.ID_TIPO_ORIGEN%TYPE DEFAULT NULL,
					    P_ID_EXPEDIENTE_OUT OUT BD_ECODOC_PLUS.EXPEDIENTE.ID_EXPEDIENTE%TYPE,
					    P_NUMERO_OUT OUT BD_ECODOC_PLUS.EXPEDIENTE.NUMERO%TYPE,
						P_RESULTADO OUT VARCHAR2 
							 
					) IS
					   
					   V_ID_EXPEDIENTE NUMBER;
					   V_NUMERO_EXPEDIENTE NUMBER:=0;
					   V_FECHA_EXPEDIENTE TIMESTAMP;
						
					  BEGIN
						     SELECT BD_ECODOC_PLUS.GENERAR_NUMERACION_EXPEDIENTE('',''),systimestamp
						     --SELECT GENERAR_NUMERACION_EXPEDIENTE('',''),systimestamp
					          INTO V_NUMERO_EXPEDIENTE,V_FECHA_EXPEDIENTE
					          FROM SYS.DUAL;
					         
						     V_ID_EXPEDIENTE:= BD_ECODOC_PLUS.EXPEDIENTE_SEQ.NEXTVAL;
					     INSERT INTO BD_ECODOC_PLUS.EXPEDIENTE
					        (
					         ID_EXPEDIENTE
					        ,COPIADO
					        ,ESTADO
							,FECHA_CREACION
							,NUMERO
							,TITULO
							,ID_CLIENTE
							,ID_PERSONA
							,ID_PROCESO
							
							,ID_PERSONA_ACTUALIZA 
					    	,PLAZO 
					    	,ID_ESTACION_ACTUAL 
					     --	,ID_PERSONAL_FIRMANTE
					    	,ID_ESTACION_PREVIA
						   	,ID_PLAZO_TIPO_DIAS
						    ,ID_SEDE
						    
					    
						    ,REFERENCIA
						    ,CLAVE_EXTERNO
						    ,ID_TIPO_ORIGEN
					        )
					        VALUES(
					        V_ID_EXPEDIENTE
					        ,P_COPIADO
					        ,P_ESTADO
					        ,V_FECHA_EXPEDIENTE
					        ,V_NUMERO_EXPEDIENTE
							,P_TITULO
							,P_ID_CLIENTE
							,P_ID_PERSONA
							,P_ID_PROCESO
							
							,P_ID_PERSONA_ACTUALIZA 
					    	,P_PLAZO 
					    	,P_ID_ESTACION_ACTUAL 
					     	--,P_ID_PERSONAL_FIRMANTE
					    	,P_ID_ESTACION_PREVIA
						   	,P_ID_PLAZO_TIPO_DIAS
						    ,P_ID_SEDE	    
						    
							,P_REFERENCIA
							,P_CLAVE_EXTERNO
							,P_ID_TIPO_ORIGEN
					        );
					       P_ID_EXPEDIENTE_OUT:= V_ID_EXPEDIENTE;
 					       P_NUMERO_OUT:= V_NUMERO_EXPEDIENTE;
								 P_RESULTADO := 'SE REGISTRO CON EXITO';
					    /*  COMMIT;
					       EXCEPTION
					            WHEN OTHERS THEN
					             P_ID_EXPEDIENTE_OUT:= NULL ;
					              P_NUMERO_OUT:= NULL;
											 P_RESULTADO := 'FATAL ERROR';*/
					  END ;

			 
			  PROCEDURE USP_CP_INSERT_PERSOJURIDICA(    
				    P_NUM_RUC IN CP_TBL_PERSO_JURIDICA.NUM_RUC%TYPE DEFAULT NULL,    
				    P_TXT_RAZON_SOCIAL IN CP_TBL_PERSO_JURIDICA.TXT_RAZON_SOCIAL%TYPE DEFAULT NULL,
				    P_NUM_PARTIDA_ELECTRONICA IN CP_TBL_PERSO_JURIDICA.NUM_PARTIDA_ELECTRONICA%TYPE DEFAULT NULL,
				    P_NUM_ASIENTO_REGISTRAL IN CP_TBL_PERSO_JURIDICA.NUM_ASIENTO_REGISTRAL%TYPE DEFAULT NULL,
				    P_ID_REPRESENTANTE_LEGAL IN CP_TBL_PERSO_JURIDICA.ID_REPRESENTANTE_LEGAL%TYPE DEFAULT NULL,
				    P_ID_SESION_REG  IN CP_TBL_PERSO_JURIDICA.ID_SESION_REG%TYPE,
					P_ID_SESION_MOD  IN CP_TBL_PERSO_JURIDICA.ID_SESION_MOD%TYPE,     
				    P_ID_JURIDICA_OUT OUT CP_TBL_PERSO_JURIDICA.ID_JURIDICA%TYPE,
					P_RESULTADO OUT VARCHAR2 
						 
				) IS   
				   V_ID_JURIDICA NUMBER;
					
				  BEGIN
					     V_ID_JURIDICA:= CP_TBL_PERSO_JURIDICA_SEQ.NEXTVAL;
				     INSERT INTO CP_TBL_PERSO_JURIDICA
				        (
						         ID_JURIDICA		        
								,NUM_RUC				
								,TXT_RAZON_SOCIAL
								,NUM_PARTIDA_ELECTRONICA
								,NUM_ASIENTO_REGISTRAL
								,ID_SESION_REG
								,ID_SESION_MOD
				        )
				        VALUES(
							    V_ID_JURIDICA			    
								,P_NUM_RUC				
								,P_TXT_RAZON_SOCIAL
								,P_NUM_PARTIDA_ELECTRONICA
								,P_NUM_ASIENTO_REGISTRAL				
								,P_ID_SESION_REG
								,P_ID_SESION_MOD				
				        );
				       P_ID_JURIDICA_OUT:= V_ID_JURIDICA;
							 P_RESULTADO := '1';
				      --COMMIT;
				     /*  EXCEPTION
				            WHEN OTHERS THEN
				             P_ID_JURIDICA_OUT:= NULL ;
										 P_RESULTADO := '0';*/
				  END ;

 
 
				 PROCEDURE USP_CP_INSERT_PERSONALECO(
					P_DNI IN BD_ECODOC_PLUS.PERSONAL.DNI%TYPE DEFAULT NULL,
					P_APELLIDOS IN BD_ECODOC_PLUS.PERSONAL.APELLIDOS%TYPE DEFAULT NULL,	
					P_NOMBRES IN BD_ECODOC_PLUS.PERSONAL.NOMBRES%TYPE DEFAULT NULL,
					P_CARGO IN BD_ECODOC_PLUS.PERSONAL.CARGO%TYPE DEFAULT NULL,
					P_UNIDAD_ORGANICA IN BD_ECODOC_PLUS.PERSONAL.UNIDAD_ORGANICA%TYPE DEFAULT NULL,
					P_CORREO IN BD_ECODOC_PLUS.PERSONAL.CORREO%TYPE DEFAULT NULL,
					P_ID_CLIENTE IN BD_ECODOC_PLUS.PERSONAL.ID_CLIENTE %TYPE DEFAULT NULL,
					P_ID_PERSONAL_OUT OUT BD_ECODOC_PLUS.PERSONAL.ID_PERSONAL%TYPE,
					P_RESULTADO OUT VARCHAR2 
						 
				) IS   
				   V_ID_PERSONAL NUMBER;
					
				  BEGIN
					     V_ID_PERSONAL:= BD_ECODOC_PLUS.PERSONAL_SEQ.NEXTVAL;
				     INSERT INTO BD_ECODOC_PLUS.PERSONAL
				        (
				        ID_PERSONAL
				       	,DNI
						,APELLIDOS	
						,NOMBRES
						,CARGO
						,UNIDAD_ORGANICA 
						,CORREO
						,CORREO_ENOTIFICACION
						,ID_CLIENTE
						,ESTADO
				        )
				        VALUES(
				         V_ID_PERSONAL
						 ,P_DNI
						 ,P_APELLIDOS	
						 ,P_NOMBRES
						 ,P_CARGO
						 ,P_UNIDAD_ORGANICA 
						 ,P_CORREO
						 ,P_CORREO
						 ,P_ID_CLIENTE
						 ,'A'
				        );
				       P_ID_PERSONAL_OUT:= V_ID_PERSONAL;
							 P_RESULTADO := '1';
				     /* COMMIT;
				       EXCEPTION
				            WHEN OTHERS THEN
				             P_ID_PERSONAL_OUT:= NULL ;
										 P_RESULTADO := '0';*/
				  END ;

 
 
				 PROCEDURE USP_CP_INSERT_PERSONATURAL(
				    P_NUM_DNI IN CP_TBL_PERSO_NATURAL.NUM_DNI%TYPE DEFAULT NULL,    
				    P_TXT_APE_PATERNO IN CP_TBL_PERSO_NATURAL.TXT_APE_PATERNO%TYPE DEFAULT NULL,
				    P_TXT_APE_MATERNO IN CP_TBL_PERSO_NATURAL.TXT_APE_MATERNO%TYPE DEFAULT NULL,
				    P_TXT_NOMBRES IN CP_TBL_PERSO_NATURAL.TXT_NOMBRES%TYPE DEFAULT NULL,
				    P_FLG_SEXO IN CP_TBL_PERSO_NATURAL.FLG_SEXO%TYPE DEFAULT NULL,
				    P_FEC_NACIMIENTO IN CP_TBL_PERSO_NATURAL.TXT_NOMBRES%TYPE DEFAULT NULL,
				    P_ID_SESION_REG  IN CP_TBL_PERSO_NATURAL.ID_SESION_REG%TYPE,
					P_ID_SESION_MOD  IN CP_TBL_PERSO_NATURAL.ID_SESION_MOD%TYPE,
				    P_PERSO_NATURAL_OUT OUT CP_TBL_PERSO_NATURAL.ID_NATURAL%TYPE,
					P_RESULTADO OUT VARCHAR2 
						 
				) IS
				   
				   V_ID_PERSO_NATURAL NUMBER;
					
				  BEGIN
					     V_ID_PERSO_NATURAL:= CP_TBL_PERSO_NATURAL_SEQ.NEXTVAL;
				     INSERT INTO CP_TBL_PERSO_NATURAL
				        (
				         		 ID_NATURAL        		
								,NUM_DNI
								,TXT_NOMBRES
								,TXT_APE_PATERNO
								,TXT_APE_MATERNO				
								,FLG_SEXO
								,FEC_NACIMIENTO				
								,ID_SESION_REG
								,ID_SESION_MOD				
								
				        )
				        VALUES(
				        		 V_ID_PERSO_NATURAL        		
								,P_NUM_DNI
								,P_TXT_NOMBRES
								,P_TXT_APE_PATERNO
								,P_TXT_APE_MATERNO				
								,P_FLG_SEXO
								,TO_DATE (P_FEC_NACIMIENTO, 'YYYYMMDD') 					
								,P_ID_SESION_REG
								,P_ID_SESION_MOD
								
				        );
				       P_PERSO_NATURAL_OUT:= V_ID_PERSO_NATURAL;
							 P_RESULTADO := '1';
				      --COMMIT;
				      /* EXCEPTION
				            WHEN OTHERS THEN
				             P_PERSO_NATURAL_OUT:= NULL ;
										 P_RESULTADO := '0';*/
				  END ;

 
 
 
				 PROCEDURE USP_CP_INSERT_REGISTRO(
				    P_ID_EXPEDIENTE IN CP_TBL_REGISTRO.ID_EXPEDIENTE%TYPE DEFAULT NULL,    
					
				    P_TXT_DESCRIPCION_TRAMITE IN CP_TBL_REGISTRO.TXT_DESCRIPCION_TRAMITE%TYPE DEFAULT NULL,
				    P_FEC_REGISTRO_TRAMITE IN CP_TBL_REGISTRO.FEC_REGISTRO_TRAMITE%TYPE DEFAULT NULL,    
				    P_ID_CIUDADANO IN CP_TBL_REGISTRO.ID_CIUDADANO%TYPE DEFAULT NULL,
				    P_COD_TESTA_TRAMI IN CP_TBL_REGISTRO.COD_TESTA_TRAMI%TYPE DEFAULT NULL,
				    P_COD_EESTA_TRAMI IN CP_TBL_REGISTRO.COD_EESTA_TRAMI%TYPE DEFAULT NULL,							  						
				    P_FLG_DECLARACION_JURADA IN CP_TBL_REGISTRO.FLG_DECLARACION_JURADA%TYPE DEFAULT NULL,				    						
					P_COD_TORGANO IN CP_TBL_REGISTRO.COD_TORGANO%TYPE DEFAULT NULL,
				    P_COD_EORGANO IN CP_TBL_REGISTRO.COD_EORGANO%TYPE DEFAULT NULL,		
				    P_ID_SESION_REG  IN CP_TBL_REGISTRO.ID_SESION_REG%TYPE,
					  P_ID_SESION_MOD  IN CP_TBL_REGISTRO.ID_SESION_MOD%TYPE,					
				    P_ID_REGISTRO_OUT OUT CP_TBL_REGISTRO.ID_REGISTRO%TYPE,
				    P_NUMERO_CERO_PAPEL_OUT OUT CP_TBL_REGISTRO.NUMERO_CERO_PAPEL%TYPE,
					P_RESULTADO OUT VARCHAR2 
						 
				) IS
				   
				   V_ID_REGISTRO NUMBER;
				   LV_NUMERO_CERO_PAPEL VARCHAR(300);
				   V_CODIGO_UNICO_TRAMITE NUMBER:=0; 
					
				  BEGIN
					     V_ID_REGISTRO:= CP_TBL_REGISTRO_SEQ.NEXTVAL;
 					     USP_CP_GENERAR_TRAMITE(V_CODIGO_UNICO_TRAMITE,LV_NUMERO_CERO_PAPEL); 					    
				     INSERT INTO CP_TBL_REGISTRO
				        (
				         		ID_REGISTRO
				        		,ID_EXPEDIENTE
								,TXT_DESCRIPCION_TRAMITE
								,FEC_REGISTRO_TRAMITE		
								,ID_CIUDADANO
								,COD_TESTA_TRAMI
								,COD_EESTA_TRAMI
								,COD_TORGANO						
								,COD_EORGANO
								,FLG_DECLARACION_JURADA
								,NUMERO_CERO_PAPEL
								,CODIGO_UNICO_TRAMITE
								,ID_SESION_REG
								,ID_SESION_MOD
				        )
				        VALUES(
								V_ID_REGISTRO
								,P_ID_EXPEDIENTE
								,P_TXT_DESCRIPCION_TRAMITE
								,SYSDATE		 
								,P_ID_CIUDADANO
								,P_COD_TESTA_TRAMI
								,P_COD_EESTA_TRAMI	
								,P_COD_TORGANO						
								,P_COD_EORGANO							
				    	  		,P_FLG_DECLARACION_JURADA
				    	  		,LV_NUMERO_CERO_PAPEL
				    	  		,V_CODIGO_UNICO_TRAMITE
								,P_ID_SESION_REG
								,P_ID_SESION_MOD
				        );
				       P_ID_REGISTRO_OUT:= V_ID_REGISTRO;
  				       P_NUMERO_CERO_PAPEL_OUT:= LV_NUMERO_CERO_PAPEL;
					   P_RESULTADO := '1';
				  END ;

 
				 PROCEDURE USP_CP_INSERT_RESPON_REGI(
				
						    P_ID_EXPEDIENTE IN BD_ECODOC_PLUS.RESPONSABLE_REGISTRO.ID_EXPEDIENTE%TYPE DEFAULT NULL,
						    P_ID_PERSONA IN BD_ECODOC_PLUS.RESPONSABLE_REGISTRO.ID_PERSONA%TYPE DEFAULT NULL,
							P_RESPONSABLE IN BD_ECODOC_PLUS.RESPONSABLE_REGISTRO.RESPONSABLE%TYPE DEFAULT NULL,  
							P_RESULTADO OUT VARCHAR2 
								 
						) IS
						   
						
							
						  BEGIN
						     INSERT INTO BD_ECODOC_PLUS.RESPONSABLE_REGISTRO
						        (
						        ID_EXPEDIENTE 
							    ,ID_PERSONA 
								,RESPONSABLE  
						        )
						        VALUES(
						        P_ID_EXPEDIENTE 
							    ,P_ID_PERSONA 
								,P_RESPONSABLE	     				
						        );						     
							    P_RESULTADO := '1';
						     
				    END ;

 
 
					 PROCEDURE USP_CP_INSERT_SESION(
					    P_SMACADDRESS IN BD_MINAM.SESIONES.SMACADDRESS%TYPE DEFAULT NULL,
					    P_SVERSIONMODULO IN BD_MINAM.SESIONES.SVERSIONMODULO%TYPE DEFAULT NULL,
					    P_ID_USUARIO IN BD_MINAM.SESIONES.ID_USUARIO%TYPE DEFAULT NULL,
					    P_ID_SISTEMA IN BD_MINAM.SESIONES.ID_SISTEMA%TYPE DEFAULT NULL,
					    P_SIPADDRESS IN BD_MINAM.SESIONES.SIPADDRESS%TYPE DEFAULT NULL,
					    P_SAPPSERVER IN BD_MINAM.SESIONES.SAPPSERVER%TYPE DEFAULT NULL,
					    P_SUSUARIORED IN BD_MINAM.SESIONES.SUSUARIORED%TYPE DEFAULT NULL,
					    P_SSISTOPERATIVO IN BD_MINAM.SESIONES.SSISTOPERATIVO%TYPE DEFAULT NULL,
					    P_LINK_APLICATIVO IN BD_MINAM.SESIONES.LINK_APLICATIVO%TYPE DEFAULT NULL,
					    P_ID_SESION_OUT OUT BD_MINAM.SESIONES.ID_SESION%TYPE
					
					) IS
					
					  L_CURSOR SYS_REFCURSOR;
					  V_ID_SESION NUMERIC;
					  BEGIN
					      BD_MINAM.USP_INSERTAR_SESION(
					      	 P_SMACADDRESS
					        ,P_SVERSIONMODULO
					        ,P_ID_USUARIO
					        ,P_ID_SISTEMA
					        ,P_SIPADDRESS
					        ,P_SAPPSERVER
					        ,P_SUSUARIORED
					        ,P_SSISTOPERATIVO
					        ,P_LINK_APLICATIVO
					        ,L_CURSOR
					        );
					      
						    LOOP
								FETCH L_CURSOR
								INTO V_ID_SESION;
								EXIT WHEN L_CURSOR%NOTFOUND;
							 		--DBMS_OUTPUT.PUT_LINE(V_ID_SESION);
						    END LOOP;
						    CLOSE L_CURSOR;
						   P_ID_SESION_OUT:= V_ID_SESION;
					       EXCEPTION
					            WHEN OTHERS THEN
					              P_ID_SESION_OUT:= NULL ;
					  END ;

 
					  PROCEDURE USP_CP_INSERT_USUARIO_ROL(
						    P_ID_USUARIO IN BD_MINAM.SEG_USUARIO_ROL.ID_USUARIO%TYPE DEFAULT NULL,
						    P_ID_ROL IN BD_MINAM.SEG_USUARIO_ROL.ID_ROL%TYPE DEFAULT NULL,
						    P_ESTADO IN BD_MINAM.SEG_USUARIO_ROL.ESTADO%TYPE DEFAULT NULL,
						    P_ID_USUARIO_ROL_OUT OUT BD_MINAM.SEG_USUARIO.ID_USUARIO%TYPE
						
						) IS  
						  BEGIN
							  
						      BD_MINAM.USP_INS_USUARIO_ROL(
						      	 1
						        ,NULL
						        ,P_ID_USUARIO
						        ,P_ID_ROL
						        ,NULL
						        );
						       P_ID_USUARIO_ROL_OUT:= 1000;
						     
						      /* EXCEPTION
						            WHEN OTHERS THEN
						              P_ID_USUARIO_ROL_OUT:= NULL;*/
					  END ;

 
						 
					  PROCEDURE USP_CP_INSERT_VALID(    
						    P_ID_USUARIO IN CP_TBL_USUARIO_VALID.ID_USUARIO%TYPE DEFAULT NULL,
						    P_TOKEN IN CP_TBL_USUARIO_VALID.TOKEN%TYPE DEFAULT NULL,
						    P_CODIGO IN CP_TBL_USUARIO_VALID.CODIGO%TYPE DEFAULT NULL,
						    P_ESTADO IN CP_TBL_USUARIO_VALID.ESTADO%TYPE DEFAULT NULL,
						    P_ID_CIUDADANO IN CP_TBL_USUARIO_VALID.ID_CIUDADANO%TYPE DEFAULT NULL,
						    P_ID_SESION_REG  IN CP_TBL_USUARIO_VALID.ID_SESION_REG%TYPE,
							P_ID_SESION_MOD  IN CP_TBL_USUARIO_VALID.ID_SESION_MOD%TYPE,
						    P_TOKEN_OUT OUT VARCHAR
						
						) IS
						
						   P_ID_USUARIO_VALID  NUMBER;
						  BEGIN
						      P_ID_USUARIO_VALID:= USUARIO_VALID_SEQ.NEXTVAL;
						     INSERT INTO CP_TBL_USUARIO_VALID
						        (
						         ID_USUARIO_VALID
								,ID_USUARIO
						        ,TOKEN
						        ,CODIGO
								,ESTADO
								,ID_CIUDADANO	
								,ID_SESION_REG
								,ID_SESION_MOD
						        )
						        VALUES(
						        P_ID_USUARIO_VALID
								,P_ID_USUARIO
						        ,P_ID_USUARIO||P_TOKEN
						        ,P_CODIGO
						        ,P_ESTADO	
						        ,P_ID_CIUDADANO
								,P_ID_SESION_REG
								,P_ID_SESION_MOD
						        );
						       P_TOKEN_OUT:= P_ID_USUARIO||P_TOKEN;						      
						       /*EXCEPTION
						            WHEN OTHERS THEN
						              P_TOKEN_OUT:= NULL;*/
						  END ;

						 PROCEDURE USP_CP_MODIFICAR_USUARIO_VAL(
						    P_TOKEN IN CP_TBL_USUARIO_VALID.TOKEN%TYPE DEFAULT NULL,
						    P_CODIGO IN CP_TBL_USUARIO_VALID.CODIGO%TYPE DEFAULT NULL,
						    P_ID_SESION_MOD  IN CP_TBL_USUARIO_VALID.ID_SESION_MOD%TYPE,
						    P_RESULTADO_OUT OUT VARCHAR2 ) IS
						    
						    P_ID_USUARIO  NUMBER;
						  BEGIN
						     SELECT ID_USUARIO INTO P_ID_USUARIO  FROM CP_TBL_USUARIO_VALID WHERE  TOKEN = P_TOKEN AND CODIGO = P_CODIGO AND ESTADO = '0';
								 
								 IF P_ID_USUARIO IS NOT NULL THEN
								 
								 			BD_MINAM.USP_UPD_ESTADO_USER(
								 				P_ID_USUARIO,
								 				'A',
								 				P_ID_SESION_MOD
								 			);					
											 UPDATE CP_TBL_USUARIO_VALID 
											  SET ESTADO = '1' ,
											   ID_SESION_MOD= P_ID_SESION_MOD,
						   	 				   FECHA_MOD= SYSDATE 
											  WHERE TOKEN = P_TOKEN;
											 COMMIT;
											 P_RESULTADO_OUT := 'Se Realizo correctamente la Validación del Usuario';
								  ELSE
									  P_RESULTADO_OUT := '0';
						      END IF;
						      /*EXCEPTION
						            WHEN OTHERS THEN
						              P_RESULTADO_OUT:= NULL;*/
						  END ;

 
						  PROCEDURE USP_CP_QUITAR_REPRESENTANTE(
						    P_ID_JURIDICA IN CP_TBL_CIUDADANO.ID_JURIDICA%TYPE DEFAULT NULL,
						  
						    P_ID_SESION_MOD  IN CP_TBL_CIUDADANO.ID_SESION_MOD%TYPE,
						    P_RESULTADO_OUT OUT VARCHAR2 ) IS       
						    
						    V_ID_NATURAL NUMBER;
						   BEGIN
							 SELECT ID_REPRESENTANTE_LEGAL  INTO V_ID_NATURAL FROM CP_TBL_PERSO_JURIDICA WHERE ID_JURIDICA = P_ID_JURIDICA;
	 						 IF V_ID_NATURAL IS NOT NULL THEN
	 						 	UPDATE BD_TRAMITE_CERO_PAPEL.CP_TBL_REPRES_LEGAL_JOURNAL SET 
							   	 FEC_FIN_REP =  SYSDATE,   	 
							   	 ESTADO= '0',
							   	 FECHA_MOD= SYSDATE, 
							   	 ID_SESION_MOD= P_ID_SESION_MOD   
							     WHERE ID_JURIDICA = P_ID_JURIDICA AND ID_NATURAL = V_ID_NATURAL;	
	 						 END IF;
						   	 UPDATE BD_TRAMITE_CERO_PAPEL.CP_TBL_PERSO_JURIDICA SET 
						   	 ID_REPRESENTANTE_LEGAL =  '', 
						   	 FECHA_MOD= SYSDATE,
						   	 ID_SESION_MOD= P_ID_SESION_MOD   	  
						     WHERE ID_JURIDICA = P_ID_JURIDICA;							
							 P_RESULTADO_OUT := '1';
							
							
						   /*   EXCEPTION
						            WHEN OTHERS THEN
						              P_RESULTADO_OUT:= NULL;*/
						    END ;

						   
						  PROCEDURE USP_CP_RESETEAR_CONTRASENA(
						    P_ID_USUARIO IN BD_MINAM.SEG_USUARIO.ID_USUARIO%TYPE DEFAULT NULL,
						    P_CONTRACENA  IN BD_MINAM.SEG_USUARIO.CONTRACENA%TYPE DEFAULT NULL,
						    P_ID_USUARIO_VALID  IN CP_TBL_USUARIO_VALID.ID_USUARIO_VALID%TYPE,
						    P_ID_SESION_MOD  IN CP_TBL_USUARIO_VALID.ID_SESION_MOD%TYPE,
						    P_RESULTADO_OUT OUT VARCHAR2)  IS						    
						    
						  BEGIN
							  	 BD_MINAM.USP_UPD_SG_USUARIO_CONTRASENA(
									P_ID_USUARIO,
									P_CONTRACENA,
									P_ID_SESION_MOD,
									'0'								 				
									);
									UPDATE CP_TBL_USUARIO_VALID 
									SET ESTADO = '1' ,
									ID_SESION_MOD= P_ID_SESION_MOD,
						   	 		FECHA_MOD= SYSDATE 
									WHERE ID_USUARIO_VALID = P_ID_USUARIO_VALID;
											 
											-- COMMIT;
									P_RESULTADO_OUT := '1';								 
						     /* EXCEPTION
						            WHEN OTHERS THEN
						              P_RESULTADO_OUT:= NULL;*/
						  END ;
						  PROCEDURE USP_CP_GET_PERSONAL_DNI (
							 P_ID_CLIENTE IN NUMBER,
							 P_DNI IN VARCHAR2,
							 p_ResultSet  OUT  SYS_REFCURSOR) 
							IS
							
							BEGIN
							  OPEN p_ResultSet FOR
							  
							  SELECT 
							  		ID_PERSONAL
							  		,NOMBRES
							        ,APELLIDOS       
							        ,DNI
							        ,CARGO        
							  FROM
							  BD_ECODOC_PLUS.PERSONAL
							  WHERE
							  ID_CLIENTE=P_ID_CLIENTE AND DNI = P_DNI;		      
				           END USP_CP_GET_PERSONAL_DNI;
				          
				           PROCEDURE USP_CP_REPORTE (
					 		 P_COD_ETIPO_DOCUMENTO IN VARCHAR2,
							 P_NUM_DOCUMENTO_PERSONA IN VARCHAR2 DEFAULT NULL,
							 P_NUMERO_EXPEDIENTE IN VARCHAR2 DEFAULT NULL,
							 P_NOMBRES IN VARCHAR2 DEFAULT NULL,
							 P_RAZONSOCIAL IN VARCHAR2 DEFAULT NULL,
							 P_COD_ESTADO_TRAMITE IN VARCHAR2 DEFAULT NULL,
                             P_FEC_REGISTRO_DESD IN VARCHAR2 DEFAULT NULL,
                             P_FEC_REGISTRO_HAST IN VARCHAR2 DEFAULT NULL,
                             P_FEC_ENVIO_DESD IN VARCHAR2 DEFAULT NULL,
                             P_FEC_ENVIO_HAST IN VARCHAR2 DEFAULT NULL,
                             p_ResultSet  OUT  SYS_REFCURSOR) IS
							
							 SQLREPORTE VARCHAR(3400):= 'SELECT
												        EEX.NUMERO
												        ,DECODE(CIU.ID_JURIDICA , NULL, ''DNI'', ''RUC'')   DESC_TIPO_DOC
												        ,DECODE(CIU.ID_JURIDICA , NULL, NAT.TXT_NOMBRES || '' ''||NAT.TXT_APE_PATERNO, JUR.TXT_RAZON_SOCIAL)      NOMBRES
												        ,DECODE(CIU.ID_JURIDICA , NULL, NAT.NUM_DNI , JUR.NUM_RUC ) NUM_DOCUMENTO_PERSONA
												        ,CIU.TXT_CORREO_ELECTRONICO
												        ,RCP.TXT_DESCRIPCION_TRAMITE
												        ,BD_TRAMITE_CERO_PAPEL.FN_OBT_DESC_CODIGO(RCP.COD_TESTA_TRAMI, RCP.COD_EESTA_TRAMI) DESC_ESTA_TRAMI
												        ,TO_CHAR(RCP.FEC_REGISTRO_TRAMITE,''YYYYMMDD'') FEC_REGISTRO_TRAMITE
												        ,TO_CHAR(RCP.FEC_ENVIO_TRAMITE,''YYYYMMDD'')  FEC_ENVIO_TRAMITE
												        FROM
												        BD_TRAMITE_CERO_PAPEL.CP_TBL_REGISTRO RCP
												        LEFT JOIN BD_ECODOC_PLUS.EXPEDIENTE  EEX ON ( RCP.ID_EXPEDIENTE  = EEX.ID_EXPEDIENTE )
												        INNER JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_CIUDADANO CIU ON (RCP.ID_CIUDADANO = CIU.ID_CIUDADANO)
												        LEFT JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_PERSO_NATURAL NAT ON (CIU.ID_NATURAL = NAT.ID_NATURAL)
												        LEFT JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_PERSO_JURIDICA JUR ON (CIU.ID_JURIDICA = JUR.ID_JURIDICA) 
														WHERE 1=1' ;
							 BEGIN								 
								  IF P_COD_ETIPO_DOCUMENTO = '1' THEN								
								   SQLREPORTE:= SQLREPORTE|| ' AND CIU.ID_JURIDICA IS NOT NULL';		
								  END IF; 
								  IF P_COD_ETIPO_DOCUMENTO = '2' THEN								   
								   SQLREPORTE:= SQLREPORTE|| ' AND CIU.ID_NATURAL IS NOT NULL';
								  END IF; 
                                  IF P_NUM_DOCUMENTO_PERSONA IS NOT NULL AND P_COD_ETIPO_DOCUMENTO = '1' THEN								   
								   SQLREPORTE:= SQLREPORTE|| ' AND JUR.NUM_RUC ='||P_NUM_DOCUMENTO_PERSONA;
								  END IF; 
                                  IF P_NUM_DOCUMENTO_PERSONA IS NOT NULL AND P_COD_ETIPO_DOCUMENTO = '2' THEN								   
								   SQLREPORTE:= SQLREPORTE|| ' AND NAT.NUM_DNI ='||P_NUM_DOCUMENTO_PERSONA;
								  END IF;
								  IF P_NUMERO_EXPEDIENTE IS NOT NULL THEN								   
								   SQLREPORTE:= SQLREPORTE|| ' AND EEX.NUMERO = '||P_NUMERO_EXPEDIENTE;
								  END IF;
								  IF P_NOMBRES IS NOT NULL THEN								   
								   SQLREPORTE:= SQLREPORTE|| ' AND REPLACE(NAT.TXT_NOMBRES||NAT.TXT_APE_PATERNO||NAT.TXT_APE_MATERNO,'' '','''')  LIKE ''%''|| REPLACE('''||P_NOMBRES||''','' '','''') ||''%''';
								  END IF;
								  IF P_RAZONSOCIAL IS NOT NULL THEN
								   SQLREPORTE:= SQLREPORTE|| ' AND JUR.TXT_RAZON_SOCIAL = '''||P_RAZONSOCIAL||'''';
								  END IF;
         						  IF P_COD_ESTADO_TRAMITE IS NOT NULL THEN
								   SQLREPORTE:= SQLREPORTE|| ' AND RCP.COD_EESTA_TRAMI  =  '||P_COD_ESTADO_TRAMITE;
								  END IF;
  							      IF P_FEC_REGISTRO_DESD IS NOT NULL AND P_FEC_REGISTRO_HAST IS NOT NULL THEN
								   SQLREPORTE:= SQLREPORTE|| ' AND TO_DATE(TO_CHAR(RCP.FEC_REGISTRO_TRAMITE, ''YYYYMMDD''),''YYYYMMDD'') BETWEEN TO_DATE ('||P_FEC_REGISTRO_DESD||', ''YYYYMMDD'') AND TO_DATE ('||P_FEC_REGISTRO_HAST||', ''YYYYMMDD'')';
								  END IF;
								  IF P_FEC_ENVIO_DESD IS NOT NULL AND P_FEC_ENVIO_HAST IS NOT NULL THEN
								   SQLREPORTE:= SQLREPORTE|| ' AND TO_DATE(TO_CHAR(RCP.FEC_ENVIO_TRAMITE, ''YYYYMMDD''),''YYYYMMDD'') BETWEEN TO_DATE ('||P_FEC_ENVIO_DESD ||', ''YYYYMMDD'') AND TO_DATE ('|| P_FEC_ENVIO_HAST||', ''YYYYMMDD'')';								  
								  END IF;
								  SQLREPORTE:= SQLREPORTE|| ' ORDER BY  EEX.NUMERO';
								DBMS_OUTPUT.PUT_LINE('Query: ' || SQLREPORTE);
								OPEN  p_ResultSet FOR  SQLREPORTE;
							END USP_CP_REPORTE;
						 PROCEDURE USP_CP_GET_ARCHIVOS (
							 P_ID_DOCUMENTO IN CP_TBL_ARCHIVO.ID_DOCUMENTO%TYPE DEFAULT NULL,							
							 p_ResultSet  OUT  SYS_REFCURSOR) 
							IS							
							BEGIN
							  OPEN p_ResultSet FOR
							  		SELECT
							        ID_ARCHIVO
							        ,ID_DOCUMENTO
							        ,COD_TSUST_DOCUMENTO
							        ,COD_ESUST_DOCUMENTO
							        ,FN_OBT_DESC_CODIGO(COD_TSUST_DOCUMENTO, COD_ESUST_DOCUMENTO) DES_SUST_DOCUMENTO										
							        ,TXT_NUMERO_ARCHIVO
							        ,FLG_ESPRINCIPAL
							        ,FLG_ESTA_FIRMADO
							        ,TXT_NOMBRE_ARCHIVO
							        ,TXT_RUTA_LOCAL
							       FROM CP_TBL_ARCHIVO
							       WHERE ID_DOCUMENTO = P_ID_DOCUMENTO AND FLG_ESTADO = '1';	      
				           END USP_CP_GET_ARCHIVOS;
				          
				          PROCEDURE USP_CP_GET_CIUDADANO_DOC(
							 P_NUMERO_DOCUMENTO IN VARCHAR2,							
							 P_ID_TIPO_DOCUMENTO IN VARCHAR2,
							 P_ID_CIUDADANO OUT CP_TBL_CIUDADANO.ID_CIUDADANO%TYPE,
							 P_ID_USUARIO OUT CP_TBL_CIUDADANO.ID_USUARIO%TYPE,    
    						 P_ID_NATURAL OUT CP_TBL_CIUDADANO.ID_NATURAL%TYPE,
    						 P_ID_JURIDICA OUT CP_TBL_CIUDADANO.ID_JURIDICA%TYPE,
 						     P_TXT_DIRECCION OUT CP_TBL_CIUDADANO.TXT_DIRECCION%TYPE ,
						     P_NUM_TELEFONO_CELULAR OUT CP_TBL_CIUDADANO.NUM_TELEFONO_CELULAR%TYPE,
						     P_TXT_CORREO_ELECTRONICO OUT CP_TBL_CIUDADANO.TXT_CORREO_ELECTRONICO%TYPE,
						     P_ID_UBIGEO_DOMICILIO  OUT CP_TBL_CIUDADANO.ID_UBIGEO_DOMICILIO%TYPE) 
							IS 
							BEGIN
							  IF P_ID_TIPO_DOCUMENTO = '01' THEN								   
								SELECT  CIU.ID_CIUDADANO, CIU.ID_USUARIO, CIU.ID_NATURAL, CIU.ID_JURIDICA, CIU.TXT_DIRECCION, CIU.NUM_TELEFONO_CELULAR, CIU.TXT_CORREO_ELECTRONICO,CIU.ID_UBIGEO_DOMICILIO
								       INTO P_ID_CIUDADANO, P_ID_USUARIO,P_ID_NATURAL, P_ID_JURIDICA, P_TXT_DIRECCION, P_NUM_TELEFONO_CELULAR, P_TXT_CORREO_ELECTRONICO, P_ID_UBIGEO_DOMICILIO												        
								FROM CP_TBL_CIUDADANO CIU 
								INNER JOIN   CP_TBL_PERSO_NATURAL NAT ON (CIU.ID_NATURAL = NAT.ID_NATURAL)
								WHERE NAT.NUM_DNI = P_NUMERO_DOCUMENTO;								 
							  ELSIF P_ID_TIPO_DOCUMENTO = '06' THEN
							    SELECT  CIU.ID_CIUDADANO, CIU.ID_USUARIO, CIU.ID_NATURAL, CIU.ID_JURIDICA, CIU.TXT_DIRECCION, CIU.NUM_TELEFONO_CELULAR, CIU.TXT_CORREO_ELECTRONICO,CIU.ID_UBIGEO_DOMICILIO
								       INTO P_ID_CIUDADANO, P_ID_USUARIO,P_ID_NATURAL, P_ID_JURIDICA,  P_TXT_DIRECCION, P_NUM_TELEFONO_CELULAR,P_TXT_CORREO_ELECTRONICO, P_ID_UBIGEO_DOMICILIO												        
								FROM CP_TBL_CIUDADANO CIU 
								INNER JOIN CP_TBL_PERSO_JURIDICA JUR ON (CIU.ID_JURIDICA = JUR.ID_JURIDICA)	
							    WHERE JUR.NUM_RUC =P_NUMERO_DOCUMENTO;
							   END IF;
							 EXCEPTION
						       WHEN OTHERS THEN
						        P_ID_CIUDADANO:= NULL;
						        P_ID_USUARIO:= NULL;
						        P_ID_NATURAL:= NULL;
						        P_ID_JURIDICA:= NULL;
						        P_TXT_DIRECCION:= NULL;
						        P_NUM_TELEFONO_CELULAR:= NULL;
						        P_TXT_CORREO_ELECTRONICO:= NULL;
				           END USP_CP_GET_CIUDADANO_DOC;
				          
				         PROCEDURE USP_CP_GET_CIUDADANO_ID(
							 P_ID_CIUDADANO IN CP_TBL_CIUDADANO.ID_CIUDADANO%TYPE DEFAULT NULL,
							 P_ID_USUARIO OUT CP_TBL_CIUDADANO.ID_USUARIO%TYPE,    
    						 P_ID_NATURAL OUT CP_TBL_CIUDADANO.ID_NATURAL%TYPE,
    						 P_ID_JURIDICA OUT CP_TBL_CIUDADANO.ID_JURIDICA%TYPE,
 						     P_TXT_DIRECCION OUT CP_TBL_CIUDADANO.TXT_DIRECCION%TYPE ,
						     P_NUM_TELEFONO_CELULAR OUT CP_TBL_CIUDADANO.NUM_TELEFONO_CELULAR%TYPE,
						     P_TXT_CORREO_ELECTRONICO OUT CP_TBL_CIUDADANO.TXT_CORREO_ELECTRONICO%TYPE,
						     P_ID_UBIGEO_DOMICILIO  OUT CP_TBL_CIUDADANO.ID_UBIGEO_DOMICILIO%TYPE) 
						     
							IS							
							BEGIN
							  
							SELECT CIU.ID_USUARIO, CIU.ID_NATURAL ,CIU.ID_JURIDICA, CIU.TXT_DIRECCION ,CIU.NUM_TELEFONO_CELULAR ,CIU.TXT_CORREO_ELECTRONICO, CIU.ID_UBIGEO_DOMICILIO
							 INTO P_ID_USUARIO,P_ID_NATURAL, P_ID_JURIDICA,  P_TXT_DIRECCION, P_NUM_TELEFONO_CELULAR,P_TXT_CORREO_ELECTRONICO, P_ID_UBIGEO_DOMICILIO
							FROM CP_TBL_CIUDADANO CIU
							WHERE CIU.ID_CIUDADANO = P_ID_CIUDADANO;
						 	EXCEPTION
						       WHEN OTHERS THEN
						        P_ID_USUARIO:= NULL;
						        P_ID_NATURAL:= NULL;
						        P_ID_JURIDICA:= NULL;
				         END USP_CP_GET_CIUDADANO_ID;
				        
				        
				         PROCEDURE USP_CP_GET_CIUDADANO_CSLD(
							 P_ID_CIUDADANO IN CP_TBL_CIUDADANO.ID_CIUDADANO%TYPE DEFAULT NULL,
							 P_ID_USUARIO OUT CP_TBL_CIUDADANO.ID_USUARIO%TYPE,    
    						 P_ID_NATURAL OUT CP_TBL_CIUDADANO.ID_NATURAL%TYPE,
    						 P_ID_JURIDICA OUT CP_TBL_CIUDADANO.ID_JURIDICA%TYPE,
    						 P_NUM_DNI OUT CP_TBL_PERSO_NATURAL.NUM_DNI%TYPE,
    						 P_TXT_APE_PATERNO OUT CP_TBL_PERSO_NATURAL.TXT_APE_PATERNO %TYPE,
    						 P_TXT_APE_MATERNO OUT CP_TBL_PERSO_NATURAL.TXT_APE_MATERNO%TYPE,
    						 P_TXT_NOMBRES OUT CP_TBL_PERSO_NATURAL.TXT_NOMBRES%TYPE,
    						 P_NUM_RUC OUT CP_TBL_PERSO_JURIDICA.NUM_RUC%TYPE,
    						 P_TXT_RAZON_SOCIAL OUT CP_TBL_PERSO_JURIDICA.TXT_RAZON_SOCIAL%TYPE,    						 
 						     P_TXT_DIRECCION OUT CP_TBL_CIUDADANO.TXT_DIRECCION%TYPE ,
						     P_NUM_TELEFONO_CELULAR OUT CP_TBL_CIUDADANO.NUM_TELEFONO_CELULAR%TYPE,
						     P_TXT_CORREO_ELECTRONICO OUT CP_TBL_CIUDADANO.TXT_CORREO_ELECTRONICO%TYPE,
						     P_ID_UBIGEO_DOMICILIO  OUT CP_TBL_CIUDADANO.ID_UBIGEO_DOMICILIO%TYPE) 
						     
							IS							
							BEGIN
							  SELECT CIU.ID_USUARIO, CIU.ID_NATURAL ,CIU.ID_JURIDICA, NAT.NUM_DNI, NAT.TXT_APE_PATERNO, NAT.TXT_APE_MATERNO,NAT.TXT_NOMBRES,JUR.NUM_RUC,JUR.TXT_RAZON_SOCIAL, CIU.TXT_DIRECCION ,CIU.NUM_TELEFONO_CELULAR ,CIU.TXT_CORREO_ELECTRONICO, CIU.ID_UBIGEO_DOMICILIO
			                   INTO P_ID_USUARIO, P_ID_NATURAL, P_ID_JURIDICA, P_NUM_DNI,P_TXT_APE_PATERNO,P_TXT_APE_MATERNO , P_TXT_NOMBRES, P_NUM_RUC, P_TXT_RAZON_SOCIAL, P_TXT_DIRECCION, P_NUM_TELEFONO_CELULAR,P_TXT_CORREO_ELECTRONICO, P_ID_UBIGEO_DOMICILIO
			            	  FROM CP_TBL_CIUDADANO CIU
			                  LEFT JOIN CP_TBL_PERSO_NATURAL NAT ON (CIU.ID_NATURAL = NAT.ID_NATURAL)
			                  LEFT JOIN CP_TBL_PERSO_JURIDICA JUR ON (CIU.ID_JURIDICA = JUR.ID_JURIDICA)
			                  WHERE CIU.ID_CIUDADANO =	P_ID_CIUDADANO;
							  EXCEPTION
						       WHEN OTHERS THEN
						        P_ID_USUARIO:= NULL;
						        P_ID_NATURAL:= NULL;
						        P_ID_JURIDICA:= NULL;	      
				          END USP_CP_GET_CIUDADANO_CSLD;
				         
				          PROCEDURE USP_CP_GET_REPRESENTANTE_LEGAL (
							 P_ID_JURIDICA IN CP_TBL_CIUDADANO.ID_JURIDICA%TYPE DEFAULT NULL,							
							 p_ResultSet  OUT  SYS_REFCURSOR) 
							IS							
							BEGIN
							  OPEN p_ResultSet FOR
							  		    SELECT
							                 CIU.ID_CIUDADANO
							                ,CIU.ID_USUARIO
							                ,CIU.ID_NATURAL
							                ,CIU.ID_JURIDICA
							                ,RLG.NUM_DNI
							                ,RLG.TXT_NOMBRES ||' '|| RLG.TXT_APE_PATERNO ||' '|| RLG.TXT_APE_MATERNO NOMBRES
							                ,DECODE( RLG.ESTADO,'1','ACTIVO','INACTIVO') AS ESTADO_REPRESE
								            ,TO_CHAR(RLG.FEC_INICIO_REP , 'YYYYMMDD HH24:MI:SS') AS FEC_INICIO_REP
								            ,TO_CHAR(RLG.FEC_FIN_REP  , 'YYYYMMDD HH24:MI:SS') AS FEC_FIN_REP
							                ,CIU.TXT_DIRECCION
							                ,CIU.NUM_TELEFONO_CELULAR
							                ,CIU.TXT_CORREO_ELECTRONICO
							                ,CIU.ID_UBIGEO_DOMICILIO
							             FROM CP_TBL_CIUDADANO CIU INNER JOIN (
									         SELECT
									        	 NAT.ID_NATURAL
									            ,NAT.NUM_DNI
									            ,NAT.TXT_APE_PATERNO
									            ,NAT.TXT_APE_MATERNO
									            ,NAT.TXT_NOMBRES
							     	            ,JOU.ESTADO
									            ,JOU.FEC_INICIO_REP
									            ,JOU.FEC_FIN_REP
									        FROM  CP_TBL_PERSO_NATURAL NAT
									        INNER JOIN CP_TBL_REPRES_LEGAL_JOURNAL JOU ON(NAT.ID_NATURAL = JOU.ID_NATURAL )
									        WHERE JOU.ID_JURIDICA =  P_ID_JURIDICA
									        ) RLG ON( CIU.ID_NATURAL = RLG.ID_NATURAL)
									        ORDER BY ESTADO_REPRESE;	      
				           END USP_CP_GET_REPRESENTANTE_LEGAL;
				          
						   PROCEDURE USP_CP_GET_DOCUMENTO(
						    			 P_ID_REGISTRO IN CP_TBL_DOCUMENTO.ID_REGISTRO%TYPE DEFAULT NULL,
										 P_ID_DOCUMENTO OUT CP_TBL_DOCUMENTO.ID_DOCUMENTO%TYPE,
										 P_COD_TTIPO_DOCUMENTO OUT CP_TBL_DOCUMENTO.COD_TTIPO_DOCUMENTO%TYPE,    
			    						 P_COD_ETIPO_DOCUMENTO OUT CP_TBL_DOCUMENTO.COD_ETIPO_DOCUMENTO%TYPE,
			    						 P_DES_TIPO_DOC OUT VARCHAR2,
			 						     P_FLG_ESTADO OUT CP_TBL_DOCUMENTO.FLG_ESTADO%TYPE)
										IS							
										BEGIN
									   SELECT	ID_DOCUMENTO, COD_TTIPO_DOCUMENTO, COD_ETIPO_DOCUMENTO, FN_OBT_DESC_CODIGO(COD_TTIPO_DOCUMENTO, COD_ETIPO_DOCUMENTO) DES_TIPO_DOC, FLG_ESTADO
									    INTO P_ID_DOCUMENTO, P_COD_TTIPO_DOCUMENTO, P_COD_ETIPO_DOCUMENTO,P_DES_TIPO_DOC,P_FLG_ESTADO
								       FROM CP_TBL_DOCUMENTO
								       WHERE ID_REGISTRO = P_ID_REGISTRO;
								       EXCEPTION
								       WHEN OTHERS THEN
								        P_ID_DOCUMENTO:= NULL;
							 END USP_CP_GET_DOCUMENTO;
							 
				           PROCEDURE USP_CP_BANDEJA (					 		 
					 		 P_ID_CIUDADANO IN CP_TBL_REGISTRO.ID_CIUDADANO%TYPE DEFAULT NULL,
					 		 P_NUMERO_CERO_PAPEL IN CP_TBL_REGISTRO.NUMERO_CERO_PAPEL%TYPE DEFAULT NULL,
							 P_NUMERO IN VARCHAR2,
							 P_COD_EESTA_TRAMI IN CP_TBL_REGISTRO.COD_EESTA_TRAMI%TYPE DEFAULT NULL,							 
                             P_FEC_REGISTRO_DESD IN VARCHAR2,
                             P_FEC_REGISTRO_HAST IN VARCHAR2,                             												
                             p_ResultSet  OUT  SYS_REFCURSOR) IS																	  					
							 SQL_BANDEJA VARCHAR(820):= 'SELECT RCP.ID_REGISTRO,RCP.NUMERO_CERO_PAPEL,ECX.NUMERO,TXT_DESCRIPCION_TRAMITE,TO_CHAR(FEC_REGISTRO_TRAMITE,''YYYYMMDD HH24:MI:SS'') FEC_REGISTRO_TRAMITE,TO_CHAR(FEC_ENVIO_TRAMITE,''YYYYMMDD HH24:MI:SS'')  FEC_ENVIO_TRAMITE
											        ,COD_EESTA_TRAMI
											        ,FN_OBT_DESC_CODIGO(COD_TESTA_TRAMI, COD_EESTA_TRAMI) DESC_ESTA_TRAMI
											         FROM
											         CP_TBL_REGISTRO RCP
											         LEFT JOIN BD_ECODOC_PLUS.EXPEDIENTE ECX ON( RCP.ID_EXPEDIENTE = ECX.ID_EXPEDIENTE)
											         WHERE
											         RCP.ID_CIUDADANO='|| P_ID_CIUDADANO ;
							
							 BEGIN			           
								  IF P_NUMERO_CERO_PAPEL IS NOT NULL  THEN								   
								   SQL_BANDEJA:= SQL_BANDEJA ||' AND RCP.NUMERO_CERO_PAPEL='''||P_NUMERO_CERO_PAPEL ||'''';
								  END IF; 
								  IF P_NUMERO IS NOT NULL THEN								   
								   SQL_BANDEJA:= SQL_BANDEJA ||' AND ECX.NUMERO = TRIM('||P_NUMERO||')';
								  END IF; 
         						  IF P_COD_EESTA_TRAMI IS NOT NULL  THEN								   
								   SQL_BANDEJA:= SQL_BANDEJA || 'AND RCP.COD_EESTA_TRAMI  ='||P_COD_EESTA_TRAMI;
								  END IF;  
  							      IF P_FEC_REGISTRO_DESD IS NOT NULL AND P_FEC_REGISTRO_HAST IS NOT NULL THEN								  
								   SQL_BANDEJA:= SQL_BANDEJA || 
								  ' AND TO_DATE(TO_CHAR(RCP.FEC_REGISTRO_TRAMITE, ''YYYYMMDD''),''YYYYMMDD'') BETWEEN TO_DATE ('||P_FEC_REGISTRO_DESD||', ''YYYYMMDD'') AND TO_DATE ('||P_FEC_REGISTRO_HAST||', ''YYYYMMDD'')';								  								 
								  END IF;
							 	  SQL_BANDEJA:= SQL_BANDEJA ||'  ORDER BY FEC_REGISTRO_TRAMITE DESC';	
 								  DBMS_OUTPUT.PUT_LINE('Query: ' ||SQL_BANDEJA);
								OPEN  p_ResultSet FOR  SQL_BANDEJA;
							END USP_CP_BANDEJA;
						
				          PROCEDURE USP_CP_GET_DETALCOMPEN_CORTO (
							 P_ID_TABLA IN CP_TBL_DETALL_COMPEN.ID_TABLA%TYPE DEFAULT NULL,							
							 p_ResultSet  OUT  SYS_REFCURSOR) 
							IS							
							BEGIN
							  OPEN p_ResultSet FOR
							  	SELECT
							    COD_ELEMENTO_TABLA,
							    TXT_DESCRIPCION_CORTA,
							    TXT_REFERENCIA_1,
								TXT_REFERENCIA_2,
								TXT_REFERENCIA_ECODOC
							    FROM  BD_TRAMITE_CERO_PAPEL.CP_TBL_DETALL_COMPEN
							    WHERE
							    ID_TABLA = P_ID_TABLA
							    AND
							    FLG_ESTADO = '1'
							    ORDER BY COD_ELEMENTO_TABLA;	      
				           END USP_CP_GET_DETALCOMPEN_CORTO;
				          
				          PROCEDURE USP_CP_GET_DETALCOMPEN_LARGO (
							 P_ID_TABLA IN CP_TBL_DETALL_COMPEN.ID_TABLA%TYPE DEFAULT NULL,						
							 p_ResultSet  OUT  SYS_REFCURSOR) 
							IS							
							BEGIN
							  OPEN p_ResultSet FOR
							  	 SELECT
								    COD_ELEMENTO_TABLA,
								    TXT_DESCRIPCION_CODIGO
								    FROM  BD_TRAMITE_CERO_PAPEL.CP_TBL_DETALL_COMPEN
								    WHERE
								    ID_TABLA = P_ID_TABLA
								    AND
								    FLG_ESTADO = '1'
								    ORDER BY COD_ELEMENTO_TABLA;	      
				           END USP_CP_GET_DETALCOMPEN_LARGO;
				            
				           PROCEDURE USP_CP_GET_CLIENTE(
						    			 P_ID_TIPO_CLIENTE IN BD_ECODOC_PLUS.CLIENTE.ID_TIPO_CLIENTE%TYPE DEFAULT NULL,
						    			 P_NUMERO_IDENTIFICACION IN BD_ECODOC_PLUS.CLIENTE.NUMERO_IDENTIFICACION%TYPE DEFAULT NULL,
										 P_ID_CLIENTE OUT BD_ECODOC_PLUS.CLIENTE.ID_CLIENTE%TYPE,
										 P_ESTADO OUT BD_ECODOC_PLUS.CLIENTE.ESTADO%TYPE,  
										 P_RAZON_SOCIAL OUT BD_ECODOC_PLUS.CLIENTE.RAZON_SOCIAL%TYPE,
			    						 P_APELLIDO_PATERNO OUT BD_ECODOC_PLUS.CLIENTE.APELLIDO_PATERNO%TYPE,
			    						 P_APELLIDO_MATERNO OUT BD_ECODOC_PLUS.CLIENTE.APELLIDO_MATERNO%TYPE,
			    						 P_NOMBRE OUT BD_ECODOC_PLUS.CLIENTE.NOMBRE%TYPE,
			    						 P_TELEFONO OUT BD_ECODOC_PLUS.CLIENTE.TELEFONO%TYPE)
										IS							
										BEGIN
									    SELECT
							            ID_CLIENTE, ESTADO, RAZON_SOCIAL, APELLIDO_PATERNO, APELLIDO_MATERNO, NOMBRE, TELEFONO
							            INTO P_ID_CLIENTE, P_ESTADO, P_RAZON_SOCIAL, P_APELLIDO_PATERNO, P_APELLIDO_MATERNO, P_NOMBRE, P_TELEFONO							            
								       	FROM BD_ECODOC_PLUS.CLIENTE
								       	WHERE ID_TIPO_CLIENTE = P_ID_TIPO_CLIENTE AND
						             	NUMERO_IDENTIFICACION = P_NUMERO_IDENTIFICACION AND
						              	ESTADO= 'A';
 						                EXCEPTION
								         WHEN OTHERS THEN
								          P_ID_CLIENTE:= NULL;
							END USP_CP_GET_CLIENTE;
						    
				            
						
						
							    PROCEDURE USP_CP_GET_REGISTRO(
												 P_ID_REGISTRO IN CP_TBL_REGISTRO.ID_REGISTRO%TYPE DEFAULT NULL,
												 P_ID_EXPEDIENTE OUT CP_TBL_REGISTRO.ID_EXPEDIENTE%TYPE,
								    		 P_TXT_DESCRIPCION_TRAMITE OUT CP_TBL_REGISTRO.TXT_DESCRIPCION_TRAMITE%TYPE,						    			 
												 P_FEC_REGISTRO_TRAMITE OUT CP_TBL_REGISTRO.FEC_REGISTRO_TRAMITE%TYPE,
												 P_FEC_ENVIO_TRAMITE OUT CP_TBL_REGISTRO.FEC_ENVIO_TRAMITE%TYPE,  
												 P_ID_CIUDADANO OUT CP_TBL_REGISTRO.ID_CIUDADANO%TYPE,
												 P_COD_EESTA_TRAMI OUT CP_TBL_REGISTRO.COD_EESTA_TRAMI%TYPE,												 
												 P_FLG_DECLARACION_JURADA OUT CP_TBL_REGISTRO.FLG_DECLARACION_JURADA%TYPE,
												 P_COD_EORGANO OUT CP_TBL_REGISTRO.COD_EORGANO%TYPE,
												 P_DESCRIPCION_ORGANO OUT VARCHAR2
												 )
										IS							
										BEGIN 
							            SELECT 
													ID_EXPEDIENTE, TXT_DESCRIPCION_TRAMITE, FEC_REGISTRO_TRAMITE, FEC_ENVIO_TRAMITE, ID_CIUDADANO, COD_EESTA_TRAMI, TRIM(FLG_DECLARACION_JURADA), COD_EORGANO, 
													FN_OBT_DESC_CODIGO(COD_TORGANO, COD_EORGANO) DES_ORGANO
										      INTO 
												  P_ID_EXPEDIENTE, P_TXT_DESCRIPCION_TRAMITE, P_FEC_REGISTRO_TRAMITE, P_FEC_ENVIO_TRAMITE, P_ID_CIUDADANO, P_COD_EESTA_TRAMI, P_FLG_DECLARACION_JURADA, P_COD_EORGANO, P_DESCRIPCION_ORGANO
								        FROM CP_TBL_REGISTRO
								        WHERE ID_REGISTRO = P_ID_REGISTRO;
								        EXCEPTION
								          WHEN OTHERS THEN
								          	P_ID_EXPEDIENTE:= NULL;
								          	P_TXT_DESCRIPCION_TRAMITE:= NULL;
								         	P_FEC_REGISTRO_TRAMITE:= NULL;
								        	P_FEC_ENVIO_TRAMITE:= NULL;
								       		P_ID_CIUDADANO:= NULL;
								       
							END USP_CP_GET_REGISTRO;
						
						    PROCEDURE USP_CP_GET_USUARIO_VALIDO(
											 P_TOKEN IN CP_TBL_USUARIO_VALID.TOKEN%TYPE DEFAULT NULL,
											 P_CODIGO IN CP_TBL_USUARIO_VALID.CODIGO%TYPE,
							    			 P_ID_USUARIO_VALID OUT CP_TBL_USUARIO_VALID.ID_USUARIO_VALID%TYPE,						    			 
											 P_ID_USUARIO OUT CP_TBL_USUARIO_VALID.ID_USUARIO%TYPE)
										IS							
										BEGIN		            
							            SELECT ID_USUARIO_VALID, ID_USUARIO
								         INTO P_ID_USUARIO_VALID, P_ID_USUARIO
								        FROM CP_TBL_USUARIO_VALID
								        WHERE  TOKEN = P_TOKEN
								        AND CODIGO = P_CODIGO
								        AND ESTADO = '0';
								        EXCEPTION
								          WHEN OTHERS THEN
								          	P_ID_USUARIO_VALID:= NULL;
								            P_ID_USUARIO:= NULL;
							END USP_CP_GET_USUARIO_VALIDO;
						
						   PROCEDURE USP_CP_NOTIFICACION (					 		 
					 		 P_ID_CIUDADANO IN CP_TBL_REGISTRO.ID_CIUDADANO%TYPE DEFAULT NULL,
					 		 P_ID_NATURAL IN CP_TBL_CIUDADANO.ID_NATURAL%TYPE DEFAULT NULL,
    						 P_ID_JURIDICA IN CP_TBL_CIUDADANO.ID_JURIDICA%TYPE DEFAULT NULL,
    						 P_ID_REGISTRO IN CP_TBL_REGISTRO.ID_REGISTRO%TYPE DEFAULT NULL,
    						 P_NUMERO_EXPEDIENTE  IN VARCHAR2,
                             P_FEC_SALIDA_DESDE IN VARCHAR2,
                             P_FEC_SALIDA_HASTA IN VARCHAR2,                             
                             p_ResultSet  OUT  SYS_REFCURSOR) IS	
                             SQL_NOTIFICACION VARCHAR2(4500):= ' SELECT
													            EXPE.NUMERO,
													            EXPE.ID_EXPEDIENTE ,
													            TBRG.ID_REGISTRO,
													            TBRG.NUMERO_CERO_PAPEL,
													            '''' NOMBRE_DOCUMENTO,
													            '''' DESCRIPCION,
													            SYSDATE FECHA_SALIDA,
													            ''RECHAZADO'' ESTADO_NOTIFICACION
													            FROM BD_ECODOC_PLUS.EXPEDIENTE EXPE
													            LEFT JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_REGISTRO TBRG ON (EXPE.ID_EXPEDIENTE = TBRG.ID_EXPEDIENTE)
													            INNER JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_CIUDADANO TBCIU ON (TBRG.ID_CIUDADANO = TBCIU.ID_CIUDADANO)
													            WHERE
													            TBCIU.ID_CIUDADANO=  '||P_ID_CIUDADANO||'
													            AND EXPE.ID_ESTACION_ACTUAL = 79
													            AND EXPE.ID_ESTACION_PREVIA = 81
													            AND EXPE.ID_TIPO_ORIGEN = 2646
													            AND EXPE.ID_PROCESO = 48
													            AND EXPE.ESTADO = ''G''
    															UNION
																SELECT
													            DISTINCT
													            QENOT.NUMERO,
													            QENOT.ID_EXPEDIENTE,
													            TBRG.ID_REGISTRO,
													            TBRG.NUMERO_CERO_PAPEL,
													            QENOT.DESCRIPCION AS NOMBRE_DOCUMENTO,
													            QENOT.DESCRIPCION ||''-''|| QENOT.NUM_DOCUMENTO AS DESCRIPCION,
													            QENOT.FECHA_SALIDA,
													            ''NOTIFICADO'' ESTADO_NOTIFICACION
													            FROM
													            (SELECT
																 DCM.NUMERO,
																 MSJR.ID_EXPEDIENTE,
																 MSJR.ESTADO,
																 MSJR.ESTADO_PROCESO,
																 CLI.NUMERO_IDENTIFICACION,
																 TD.DESCRIPCION,
																 MENV.FECHA_SALIDA,
																 DCM.NUMERO NUM_DOCUMENTO
																FROM BD_ECODOC_PLUS.MENSAJERIA MSJR  
																   , BD_ECODOC_PLUS.MENSAJERIA_CLI_DESTINO MCLD
																   , BD_ECODOC_PLUS.MENSAJERIA_CLIENTE MECL
																   , BD_ECODOC_PLUS.MENSAJERIA_PREPARACION MEPR
																   , BD_ECODOC_PLUS.MENSAJERIA_ARCHIVO MARC
																   , BD_ECODOC_PLUS.ARCHIVO ARCH
																   , BD_ECODOC_PLUS.DOCUMENTO DCM
																   , BD_ECODOC_PLUS.TIPO_DOCUMENTO TD
																   , BD_ECODOC_PLUS.CLIENTE CLI
																   , BD_ECODOC_PLUS.MENSAJERIA_ENVIO MENV
																WHERE
																MSJR.ESTADO = ''E'' AND
																MSJR.ESTADO_PROCESO = ''C'' AND
																MCLD.ID_MENSAJERIA_CLI_DESTINO = MSJR.ID_MENSAJERIA_CLI_DESTINO AND
																MCLD.SELECCIONADO = 1 AND
																MENV.ID_MENSAJERIA = MSJR.ID_MENSAJERIA AND
																MECL.ID_MENSAJERIA_CLIENTE = MCLD.ID_MENSAJERIA_CLIENTE AND
																MEPR.ID_MENSAJERIA_PREPARACION = MECL.ID_MENSAJERIA_PREPARACION AND
																MEPR.ENVIADO = 1 AND
																MARC.ID_MENSAJERIA_PREPARACION = MEPR.ID_MENSAJERIA_PREPARACION AND
																MARC.SELECCIONADO = 1 AND
																ARCH.ID_ARCHIVO = MARC.ID_ARCHIVO AND
																DCM.ID_DOCUMENTO = ARCH.DOCUMENTO AND
																TD.ID_TIPO_DOCUMENTO = DCM.ID_TIPO_DOCUMENTO AND
																MECL.ID_CLIENTE = CLI.ID_CLIENTE) QENOT
													            LEFT JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_REGISTRO TBRG ON (QENOT.ID_EXPEDIENTE = TBRG.ID_EXPEDIENTE)';
									 BEGIN			           
										 IF P_ID_NATURAL IS NOT NULL  THEN								   
										   SQL_NOTIFICACION:= SQL_NOTIFICACION||' INNER JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_PERSO_NATURAL TBPRJ ON (QENOT.NUMERO_IDENTIFICACION = TBPRJ.NUM_DNI)
                																  INNER JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_CIUDADANO TBCIU ON(TBPRJ.ID_NATURAL = TBCIU.ID_NATURAL)';								 
										 ELSIF P_ID_JURIDICA IS NOT NULL THEN								   
										   SQL_NOTIFICACION:= SQL_NOTIFICACION||' INNER JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_PERSO_JURIDICA TBJUR ON (QENOT.NUMERO_IDENTIFICACION = TBJUR.NUM_RUC)
                																  INNER JOIN BD_TRAMITE_CERO_PAPEL.CP_TBL_CIUDADANO TBCIU ON(TBJUR.ID_JURIDICA = TBCIU.ID_JURIDICA)';     
										 END IF;
										 SQL_NOTIFICACION:= SQL_NOTIFICACION||' WHERE TBCIU.ID_CIUDADANO='||P_ID_CIUDADANO;
										  
		         						 IF P_ID_REGISTRO IS NOT NULL  THEN								   
										   SQL_NOTIFICACION:= SQL_NOTIFICACION||' AND TBRG.ID_REGISTRO = '||P_ID_REGISTRO;
										 END IF;
										 IF P_NUMERO_EXPEDIENTE IS NOT NULL  THEN								   
										   SQL_NOTIFICACION:= SQL_NOTIFICACION||' AND QENOT.NUMERO = TRIM('||P_NUMERO_EXPEDIENTE||')';
										 END IF;
		  							     IF P_FEC_SALIDA_DESDE IS NOT NULL AND P_FEC_SALIDA_HASTA IS NOT NULL THEN								  
										   SQL_NOTIFICACION:= SQL_NOTIFICACION || 
										  '  AND TO_DATE(TO_CHAR(QENOT.FECHA_SALIDA, ''YYYYMMDD''),''YYYYMMDD'') BETWEEN TO_DATE ('||P_FEC_SALIDA_DESDE||', ''YYYYMMDD'') AND TO_DATE ('||P_FEC_SALIDA_HASTA||', ''YYYYMMDD'')';								  								 
										 END IF;									 	 	
		 								 DBMS_OUTPUT.PUT_LINE('Query: ' ||SQL_NOTIFICACION);
										 OPEN  p_ResultSet FOR  SQL_NOTIFICACION;
									END USP_CP_NOTIFICACION;
								
								 PROCEDURE USP_CP_NOTIFICACION_ARCH (					 		 
						 		 P_ID_EXPEDIENTE IN CP_TBL_REGISTRO.ID_EXPEDIENTE%TYPE DEFAULT NULL,						 		               
	                             p_ResultSet  OUT  SYS_REFCURSOR) IS
	                             BEGIN	
		                              OPEN p_ResultSet FOR
										SELECT
										  DCM.NUMERO,																 
										  ARCH.ID_ARCHIVO,
	            						  ARCH.NOMBRE
										 FROM BD_ECODOC_PLUS.MENSAJERIA MSJR  
										  ,BD_ECODOC_PLUS.MENSAJERIA_CLI_DESTINO MCLD
										  ,BD_ECODOC_PLUS.MENSAJERIA_CLIENTE MECL
										  ,BD_ECODOC_PLUS.MENSAJERIA_PREPARACION MEPR
										  ,BD_ECODOC_PLUS.MENSAJERIA_ARCHIVO MARC
										  ,BD_ECODOC_PLUS.ARCHIVO ARCH
										  ,BD_ECODOC_PLUS.DOCUMENTO DCM
										  ,BD_ECODOC_PLUS.TIPO_DOCUMENTO TD
										  ,BD_ECODOC_PLUS.CLIENTE CLI										  
										WHERE
										   MSJR.ID_EXPEDIENTE = P_ID_EXPEDIENTE AND  
										   MSJR.ESTADO = 'E' AND
										   MSJR.ESTADO_PROCESO = 'C' AND
										   MCLD.ID_MENSAJERIA_CLI_DESTINO = MSJR.ID_MENSAJERIA_CLI_DESTINO AND
										   MCLD.SELECCIONADO = 1 AND										   
										   MECL.ID_MENSAJERIA_CLIENTE = MCLD.ID_MENSAJERIA_CLIENTE AND
										   MEPR.ID_MENSAJERIA_PREPARACION = MECL.ID_MENSAJERIA_PREPARACION AND
									       MEPR.ENVIADO = 1 AND
										   MARC.ID_MENSAJERIA_PREPARACION = MEPR.ID_MENSAJERIA_PREPARACION AND
										   MARC.SELECCIONADO = 1 AND
										   ARCH.ID_ARCHIVO = MARC.ID_ARCHIVO AND
									       DCM.ID_DOCUMENTO = ARCH.DOCUMENTO AND
										   TD.ID_TIPO_DOCUMENTO = DCM.ID_TIPO_DOCUMENTO AND
										   MECL.ID_CLIENTE = CLI.ID_CLIENTE;
							
									END USP_CP_NOTIFICACION_ARCH;
									
						PROCEDURE USP_CP_REGENERAR_USUARIO_VAL(
						    P_TOKEN IN CP_TBL_USUARIO_VALID.TOKEN%TYPE DEFAULT NULL,
						    P_CODIGO IN CP_TBL_USUARIO_VALID.CODIGO%TYPE DEFAULT NULL,
						    P_ID_SESION_MOD  IN CP_TBL_USUARIO_VALID.ID_SESION_MOD%TYPE,
						    P_ID_CIUDADANO_OUT OUT CP_TBL_USUARIO_VALID.ID_CIUDADANO%TYPE,
						    P_RESULTADO_OUT OUT VARCHAR2 ) IS
					
						  BEGIN
						          UPDATE CP_TBL_USUARIO_VALID 
											  SET 
											 ESTADO = '0' ,
											 CODIGO = P_CODIGO,
											 ID_SESION_MOD= P_ID_SESION_MOD,
						   	 				 FECHA_MOD= SYSDATE 
											 WHERE TOKEN = P_TOKEN;
								  SELECT ID_CIUDADANO INTO P_ID_CIUDADANO_OUT FROM  CP_TBL_USUARIO_VALID WHERE TOKEN = P_TOKEN;
										-- COMMIT;
										 P_RESULTADO_OUT := '1';							 						  
						  END USP_CP_REGENERAR_USUARIO_VAL;
				         
				        
			PROCEDURE	USP_CP_GENERAR_TRAMITE(				
				P_CODIGO_UNICO_TRAMITE_OUT OUT CP_TBL_REGISTRO.CODIGO_UNICO_TRAMITE%TYPE,	
				P_NUMERO_CERO_PAPEL_OUT OUT CP_TBL_REGISTRO.NUMERO_CERO_PAPEL%TYPE
			) IS
			   
			    V_ANIO CHAR(4):='';
			    V_CODIGO_UNICO_TRAMITE NUMBER:=0;
			    V_NUMERO_CERO_PAPEL varchar2(20);
				
			  BEGIN
				    SELECT TO_CHAR(SYSDATE,'YYYY')
			         INTO V_ANIO
			        FROM DUAL;          
				
				    SELECT MAX(T.CODIGO_UNICO_TRAMITE)
          				INTO V_CODIGO_UNICO_TRAMITE
          			FROM BD_TRAMITE_CERO_PAPEL.CP_TBL_REGISTRO T
                    WHERE TO_CHAR(T.FEC_REGISTRO_TRAMITE,'YYYY') = V_ANIO ;
				   
                    IF V_CODIGO_UNICO_TRAMITE IS NOT NULL AND V_CODIGO_UNICO_TRAMITE <>0 THEN
			             V_CODIGO_UNICO_TRAMITE := V_CODIGO_UNICO_TRAMITE +1;
			        ELSE
			              V_CODIGO_UNICO_TRAMITE := 1;
			        END IF;
			         
				    SELECT 'MPV-'||V_ANIO||'-'||SUBSTR('000000' || V_CODIGO_UNICO_TRAMITE, -6, 6) INTO V_NUMERO_CERO_PAPEL FROM DUAL;
				   
			        P_CODIGO_UNICO_TRAMITE_OUT:= V_CODIGO_UNICO_TRAMITE;
					P_NUMERO_CERO_PAPEL_OUT := V_NUMERO_CERO_PAPEL;
			      
			  END ;
  END;
